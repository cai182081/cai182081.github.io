<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cailiang&#39;s Blog</title>
  
  <subtitle>飞翔的菜鸟</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-11T04:11:41.150Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>cai182081</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL SQL 优化技巧——巧妙利用伪列实现SQL优化</title>
    <link href="http://yoursite.com/2018/04/11/SQL/MySQL_SQL%20_3/"/>
    <id>http://yoursite.com/2018/04/11/SQL/MySQL_SQL _3/</id>
    <published>2018-04-11T03:04:38.564Z</published>
    <updated>2018-04-11T04:11:41.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题SQL及执行计划"><a href="#问题SQL及执行计划" class="headerlink" title="问题SQL及执行计划"></a>问题SQL及执行计划</h2><p>SQL 文本如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SELECT id, user_id, vote_num</div><div class="line">  FROM vote_record_memory</div><div class="line"> WHERE id &gt; 725152</div><div class="line">   AND group_id = 0</div><div class="line">   AND STATUS = 1</div><div class="line">   AND create_time &lt; <span class="string">'2018-04-11 23:59:59'</span></div><div class="line">   AND MOD(id, <span class="string">'12'</span>) = <span class="string">'5'</span></div><div class="line"> ORDER BY id ASC LIMIT 5000;</div></pre></td></tr></table></figure></p><p>执行计划如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">*************************** 1. row ***************************</div><div class="line">           id: 1</div><div class="line">  select_type: SIMPLE</div><div class="line">        table: vote_record_memory</div><div class="line">   partitions: NULL</div><div class="line">         <span class="built_in">type</span>: index_merge</div><div class="line">possible_keys: PRIMARY,idx_status,idx_group_id,idx_create_time,idx_mod_id</div><div class="line">          key: idx_group_id,idx_status</div><div class="line">      key_len: 86,83</div><div class="line">          ref: NULL</div><div class="line">         rows: 13846</div><div class="line">     filtered: 5.00</div><div class="line">        Extra: Using intersect(idx_group_id,idx_status); Using <span class="built_in">where</span>; Using filesort</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span>, 1 warning (0.00 sec)</div></pre></td></tr></table></figure></p><h2 id="SQL性能定位及分析"><a href="#SQL性能定位及分析" class="headerlink" title="SQL性能定位及分析"></a>SQL性能定位及分析</h2><p>根据<br>看到此SQL 初步定到 r.apply_time LIKE CONCAT(‘2017-11-07’, ‘%’) 日期类型和字符串类型隐式转换，NOT IN子查询语句无法走索引，用NOT EXISTS改写，改写SQL优化后，得到执行计划：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">SELECT COUNT(*) AS count</div><div class="line">  FROM user.user u</div><div class="line"> INNER JOIN user.token t</div><div class="line">    ON u.id = t.user_id</div><div class="line"> INNER JOIN order.user_history h</div><div class="line">    ON u.id = h.user_id</div><div class="line"> INNER JOIN order.loan_record r</div><div class="line">    ON r.history_id = h.id</div><div class="line"> INNER JOIN admin_domain.ACT_HI_PROCINST act</div><div class="line">    on act.BUSINESS_KEY_ = r.loan_record_id</div><div class="line"> WHERE r.approval_result != 0</div><div class="line">   AND NOT EXISTS (SELECT n3.id</div><div class="line">          FROM order.loan_record n1</div><div class="line">         INNER JOIN order.user_history n2</div><div class="line">            on n1.history_id = n2.id</div><div class="line">         INNER JOIN user.user n3</div><div class="line">            ON n3.id = n2.user_id</div><div class="line">         WHERE n1.approval_result = 31</div><div class="line">           AND u.id = n3.id)</div><div class="line">   AND r.apply_time &gt;= <span class="string">'2017-11-07 00:00:00'</span></div><div class="line">   AND r.apply_time &lt; <span class="string">'2017-11-08 00:00:00'</span></div><div class="line">   AND t.channel IN (<span class="string">' 201707sudt '</span>);</div></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">SELECT COUNT(*) AS count</div><div class="line">  FROM user.user u</div><div class="line"> INNER JOIN user.token t</div><div class="line">    ON u.id = t.user_id</div><div class="line"> INNER JOIN order.user_history h</div><div class="line">    ON u.id = h.user_id</div><div class="line"> INNER JOIN (SELECT history_id, loan_record_id</div><div class="line">               FROM order.loan_record</div><div class="line">              WHERE approval_result != 0</div><div class="line">                AND apply_time &gt;= <span class="string">'2017-11-07 00:00:00'</span></div><div class="line">                AND apply_time &lt; <span class="string">'2017-11-08 00:00:00'</span>) r</div><div class="line">    ON r.history_id = h.id</div><div class="line"> INNER JOIN admin_domain.ACT_HI_PROCINST act</div><div class="line">    on act.BUSINESS_KEY_ = r.loan_record_id</div><div class="line"> WHERE NOT EXISTS (SELECT n3.id</div><div class="line">          FROM order.loan_record n1</div><div class="line">         INNER JOIN order.user_history n2</div><div class="line">            on n1.history_id = n2.id</div><div class="line">         INNER JOIN user.user n3</div><div class="line">            ON n3.id = n2.user_id</div><div class="line">         WHERE n1.approval_result = 31</div><div class="line">           AND u.id = n3.id)</div><div class="line">   AND t.channel IN (<span class="string">' 201707sudt '</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题SQL及执行计划&quot;&gt;&lt;a href=&quot;#问题SQL及执行计划&quot; class=&quot;headerlink&quot; title=&quot;问题SQL及执行计划&quot;&gt;&lt;/a&gt;问题SQL及执行计划&lt;/h2&gt;&lt;p&gt;SQL 文本如下：&lt;br&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="SQL" scheme="http://yoursite.com/categories/SQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="SQL 优化" scheme="http://yoursite.com/tags/SQL-%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 自动化审核工具 Inception、Archer 的安装配置详解</title>
    <link href="http://yoursite.com/2018/04/10/DevOps/MySQL_inception_archer/"/>
    <id>http://yoursite.com/2018/04/10/DevOps/MySQL_inception_archer/</id>
    <published>2018-04-10T12:21:51.084Z</published>
    <updated>2018-04-11T03:03:56.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Inception"><a href="#Inception" class="headerlink" title="Inception"></a>Inception</h2><p>Inception是集审核、执行、回滚于一体的一个自动化运维系统，它可以对提交的所有语句的语法分析，如果语法有问题，都会将相应的错误信息返回给审核者。 还提供SQL语句的执行功能，可执行的语句类型包括常用的DML及DDL语句及truncate table等操作。 Inception在执行 DML时还提供生成回滚语句的功能，对应的操作记录及回滚语句会被存储在备份机器上面，备份机器通过配置Inception参数来指定。</p><h3 id="安装编译依赖包"><a href="#安装编译依赖包" class="headerlink" title="安装编译依赖包"></a>安装编译依赖包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@incArcher ~]<span class="comment"># yum install -y gcc gcc-c++ make ncurses-devel openssl-devel zlib-devel cmake</span></div></pre></td></tr></table></figure><h3 id="安装Bison-2-5-1版本"><a href="#安装Bison-2-5-1版本" class="headerlink" title="安装Bison-2.5.1版本"></a>安装Bison-2.5.1版本</h3><p>最新Bison版本不兼容，编译无法成功，需卸载重装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@incArcher ~]<span class="comment"># rpm -qa|grep bison | xargs rpm -e --nodeps</span></div><div class="line">[root@incArcher ~]<span class="comment"># wget http://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz -P /dba/tools</span></div><div class="line">[root@incArcher ~]<span class="comment"># cd /dba/tools</span></div><div class="line">[root@incArcher tools]<span class="comment"># tar -zxf bison-2.5.1.tar.gz</span></div><div class="line">[root@incArcher tools]<span class="comment"># cd bison-2.5.1</span></div><div class="line">[root@incArcher bison-2.5.1]<span class="comment"># ./configure --prefix=/usr/local/bison</span></div><div class="line">[root@incArcher bison-2.5.1]<span class="comment"># make &amp;&amp; make install</span></div><div class="line">[root@incArcher bison-2.5.1]<span class="comment"># echo "export PATH=/usr/local/bison/bin:\$PATH" &gt;&gt; /etc/profile</span></div><div class="line">[root@incArcher bison-2.5.1]<span class="comment"># source /etc/profile</span></div></pre></td></tr></table></figure></p><h3 id="下载-Inception-源码包"><a href="#下载-Inception-源码包" class="headerlink" title="下载 Inception 源码包"></a>下载 Inception 源码包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@incArcher bison-2.5.1]<span class="comment"># cd /dba/tools/</span></div><div class="line">[root@incArcher tools]<span class="comment"># git clone https://github.com/mysql-inception/inception.git</span></div></pre></td></tr></table></figure><h3 id="编译安装Inception"><a href="#编译安装Inception" class="headerlink" title="编译安装Inception"></a>编译安装Inception</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@incArcher tools]<span class="comment"># cd /dba/tools/inception</span></div><div class="line">[root@incArcher inception]<span class="comment"># cmake -DWITH_DEBUG=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/inception -DMYSQL_DATADIR=/data/inception/data \</span></div><div class="line">-DWITH_SSL=bundled -DCMAKE_BUILD_TYPE=RELEASE -DWITH_ZLIB=bundled \</div><div class="line">-DMY_MAINTAINER_CXX_WARNINGS=<span class="string">"-Wall -Wextra -Wunused -Wno-dev -Wwrite-strings -Wno-strict-aliasing  -Wno-unused-parameter -Woverloaded-virtual"</span> \</div><div class="line">-DMY_MAINTAINER_C_WARNINGS=<span class="string">"-Wall -Wextra -Wno-dev -Wunused -Wwrite-strings -Wno-strict-aliasing -Wdeclaration-after-statement"</span></div><div class="line">[root@incArcher inception]<span class="comment"># make -j6 &amp;&amp; make install</span></div></pre></td></tr></table></figure><h3 id="配置Inception-环境变量"><a href="#配置Inception-环境变量" class="headerlink" title="配置Inception 环境变量"></a>配置Inception 环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@incArcher inception]<span class="comment"># echo "export PATH=/usr/local/inception/bin:\$PATH" &gt;&gt; /etc/profile</span></div><div class="line">[root@incArcher inception]<span class="comment"># source /etc/profile</span></div></pre></td></tr></table></figure><h3 id="配置Inception-参数文件"><a href="#配置Inception-参数文件" class="headerlink" title="配置Inception 参数文件"></a>配置Inception 参数文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">[root@incArcher inception]<span class="comment"># cat &gt;&gt; /etc/inc.cnf &lt;&lt;EOF</span></div><div class="line">[inception]</div><div class="line">general_log = 1 </div><div class="line">general_log_file = /usr/<span class="built_in">local</span>/inception/inception.log </div><div class="line">port = 6669 </div><div class="line">socket = /usr/<span class="built_in">local</span>/inception/inc.socket </div><div class="line">character-set-server = utf8</div><div class="line"></div><div class="line"><span class="comment">#Inception 审核规则</span></div><div class="line">inception_support_charset = <span class="string">"utf8"</span></div><div class="line">inception_check_autoincrement_datatype = 1 </div><div class="line">inception_check_autoincrement_init_value = 0</div><div class="line">inception_check_autoincrement_name = 1</div><div class="line">inception_check_column_comment =1</div><div class="line">inception_check_column_default_value = 0</div><div class="line">inception_check_dml_limit = 1</div><div class="line">inception_check_dml_orderby = 1</div><div class="line">inception_check_dml_where = 1</div><div class="line">inception_check_identifier = 1</div><div class="line">inception_check_index_prefix = 1</div><div class="line">inception_check_insert_field = 1</div><div class="line">inception_check_primary_key = 1</div><div class="line">inception_check_table_comment = 1</div><div class="line">inception_check_timestamp_default = 1</div><div class="line">inception_enable_autoincrement_unsigned = 1</div><div class="line">inception_enable_blob_type = 0</div><div class="line">inception_enable_column_charset  = 1</div><div class="line">inception_enable_enum_set_bit = 0</div><div class="line">inception_enable_foreign_key = 0</div><div class="line">inception_enable_identifer_keyword = 0</div><div class="line">inception_enable_not_innodb = 1</div><div class="line">inception_enable_nullable  = 0</div><div class="line">inception_enable_orderby_rand = 1</div><div class="line">inception_enable_partition_table = 1</div><div class="line">inception_enable_select_star = 0</div><div class="line">inception_enable_sql_statistic = 1 </div><div class="line">inception_max_char_length = 10</div><div class="line">inception_max_key_parts = 5</div><div class="line">inception_max_keys = 10</div><div class="line">inception_max_update_rows = 10000</div><div class="line">inception_merge_alter_table = 1</div><div class="line"></div><div class="line"><span class="comment">#inception 支持 OSC 参数</span></div><div class="line">inception_osc_bin_dir = /usr/bin/pt-online-schema-change</div><div class="line">inception_osc_check_interval = 2</div><div class="line">inception_osc_chunk_size = 1000</div><div class="line">inception_osc_chunk_size_limit = 4</div><div class="line">inception_osc_chunk_time = 0.5</div><div class="line">inception_osc_critical_thread_connected = 1000</div><div class="line">inception_osc_critical_thread_running = 80</div><div class="line">inception_osc_drop_new_table = 1</div><div class="line">inception_osc_drop_old_table = 1</div><div class="line">inception_osc_max_lag = 3</div><div class="line">inception_osc_max_thread_connected = 1000</div><div class="line">inception_osc_max_thread_running = 80</div><div class="line">inception_osc_min_table_size = 1</div><div class="line">inception_osc_on = 1</div><div class="line">inception_osc_print_none = 1</div><div class="line">inception_osc_print_sql = 1 </div><div class="line">inception_read_only = 1 </div><div class="line"></div><div class="line"><span class="comment">#备份服务器信息</span></div><div class="line"><span class="comment">#inception_remote_system_password = 123456</span></div><div class="line"><span class="comment">#inception_remote_system_user = root</span></div><div class="line"><span class="comment">#inception_remote_backup_port = 3306</span></div><div class="line"><span class="comment">#inception_remote_backup_host = 192.168.1.54</span></div><div class="line"><span class="comment">#inception_support_charset = utf8 </span></div><div class="line">EOF</div></pre></td></tr></table></figure><h3 id="启动Inception"><a href="#启动Inception" class="headerlink" title="启动Inception"></a>启动Inception</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@incArcher inception]<span class="comment"># Inception --defaults-file=/etc/inc.cnf &amp;</span></div></pre></td></tr></table></figure><h3 id="测试Inception"><a href="#测试Inception" class="headerlink" title="测试Inception"></a>测试Inception</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@incArcher inception]<span class="comment"># mysql -uroot -h127.0.0.1 -P6669</span></div><div class="line">1@127.0.0.1:(none)&gt;inception get variables;</div></pre></td></tr></table></figure><h2 id="Archer"><a href="#Archer" class="headerlink" title="Archer"></a>Archer</h2><h3 id="安装Python-3-6"><a href="#安装Python-3-6" class="headerlink" title="安装Python 3.6"></a>安装Python 3.6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Inception&quot;&gt;&lt;a href=&quot;#Inception&quot; class=&quot;headerlink&quot; title=&quot;Inception&quot;&gt;&lt;/a&gt;Inception&lt;/h2&gt;&lt;p&gt;Inception是集审核、执行、回滚于一体的一个自动化运维系统，它可以对提交的所有
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="自动化运维" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>生产环境中 MySQL(v5.7.21) for Linux 下二进制安装配置详解</title>
    <link href="http://yoursite.com/2018/04/10/MySQL/MySQL_Install/"/>
    <id>http://yoursite.com/2018/04/10/MySQL/MySQL_Install/</id>
    <published>2018-04-10T12:18:13.634Z</published>
    <updated>2018-04-10T14:20:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载最新-MySQL-二进制安装、PXB备份工具及PT-Tools运维工具"><a href="#下载最新-MySQL-二进制安装、PXB备份工具及PT-Tools运维工具" class="headerlink" title="下载最新 MySQL 二进制安装、PXB备份工具及PT-Tools运维工具"></a>下载最新 MySQL 二进制安装、PXB备份工具及PT-Tools运维工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># wget https://www.percona.com/downloads/Percona-Server-LATEST/Percona-Server-5.7.21-20/binary/tarball/Percona-Server-5.7.21-20-Linux.x86_64.ssl101.tar.gz -P /dba/tools</span></div><div class="line">[root@PMM ~]<span class="comment"># yum install -y https://www.percona.com/downloads/percona-toolkit/3.0.8/binary/redhat/7/x86_64/percona-toolkit-3.0.8-1.el7.x86_64.rpm</span></div><div class="line">[root@PMM ~]<span class="comment"># yum install -y https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.10/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.10-1.el7.x86_64.rpm</span></div></pre></td></tr></table></figure><h2 id="卸载系统自带的-MySQL-rpm-安装包"><a href="#卸载系统自带的-MySQL-rpm-安装包" class="headerlink" title="卸载系统自带的 MySQL rpm 安装包"></a>卸载系统自带的 MySQL rpm 安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># rpm -qa|grep mysql |xargs rpm -e --nodeps</span></div></pre></td></tr></table></figure><h2 id="创建-MySQL-用户、组及安装目录"><a href="#创建-MySQL-用户、组及安装目录" class="headerlink" title="创建 MySQL 用户、组及安装目录"></a>创建 MySQL 用户、组及安装目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># userdel -r mysql</span></div><div class="line">[root@PMM ~]<span class="comment"># groupadd -g 621 mysql</span></div><div class="line">[root@PMM ~]<span class="comment"># useradd -u 620 -g mysql mysql</span></div><div class="line"></div><div class="line">[root@PMM ~]<span class="comment"># mkdir -p /data/mysql/&#123;data,log&#125;</span></div><div class="line">[root@PMM ~]<span class="comment"># mkdir -p /data/mysql/log/&#123;binlog,relaylog,undo,redo&#125;</span></div><div class="line"></div><div class="line">[root@PMM ~]<span class="comment"># chown -R mysql:mysql /data/mysql</span></div><div class="line">[root@PMM ~]<span class="comment"># chmod -R 775 /data/mysql</span></div></pre></td></tr></table></figure><h2 id="解压-MySQL-二进制文件，并赋予mysql用户权限"><a href="#解压-MySQL-二进制文件，并赋予mysql用户权限" class="headerlink" title="解压 MySQL 二进制文件，并赋予mysql用户权限"></a>解压 MySQL 二进制文件，并赋予mysql用户权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># tar -zxf /dba/tools/Percona-Server-5.7.21-20-Linux.x86_64.ssl101.tar.gz -C /usr/local/</span></div><div class="line">[root@PMM ~]<span class="comment"># ln -sv /usr/local/Percona-Server-5.7.21-20-Linux.x86_64.ssl101 /usr/local/mysql</span></div><div class="line">[root@PMM ~]<span class="comment"># chown -R mysql:mysql /usr/local/mysql</span></div></pre></td></tr></table></figure><h2 id="设置MySQL-环境变量"><a href="#设置MySQL-环境变量" class="headerlink" title="设置MySQL 环境变量"></a>设置MySQL 环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># cp -r /usr/local/mysql/support-files/mysql.server /etc/rc.d/init.d/mysqld</span></div><div class="line">[root@PMM ~]<span class="comment"># echo "export PATH=/usr/local/mysql/bin:\$PATH" &gt;&gt; /etc/profile</span></div><div class="line">[root@PMM ~]<span class="comment"># source /etc/profile</span></div></pre></td></tr></table></figure><h2 id="配置-MySQL-参数文件"><a href="#配置-MySQL-参数文件" class="headerlink" title="配置 MySQL 参数文件"></a>配置 MySQL 参数文件</h2><p>详细my.cnf配置具体参考篇章MySQL生产环境参数文件配置 <a href="https://cai182081.github.io/2017/10/15/MySQL/MySQL_my.conf/" target="_blank" rel="external">https://cai182081.github.io/2017/10/15/MySQL/MySQL_my.conf/</a></p><h2 id="初始化-MySQL-数据库"><a href="#初始化-MySQL-数据库" class="headerlink" title="初始化 MySQL 数据库"></a>初始化 MySQL 数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># su - mysql -c "mysqld --initialize-insecure --user=mysql"</span></div></pre></td></tr></table></figure><h2 id="启动-MySQL-数据库"><a href="#启动-MySQL-数据库" class="headerlink" title="启动 MySQL 数据库"></a>启动 MySQL 数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># su - mysql -c "service mysqld restart"</span></div></pre></td></tr></table></figure><h2 id="设置-MySQL-数据库’root’-’localhost’用户密码"><a href="#设置-MySQL-数据库’root’-’localhost’用户密码" class="headerlink" title="设置 MySQL 数据库’root’@’localhost’用户密码"></a>设置 MySQL 数据库’root’@’localhost’用户密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># su - mysql -c "mysqladmin -u root password mysql"</span></div></pre></td></tr></table></figure><h2 id="设置-MySQL-开机自启动"><a href="#设置-MySQL-开机自启动" class="headerlink" title="设置 MySQL 开机自启动"></a>设置 MySQL 开机自启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># chkconfig --add mysqld</span></div><div class="line">[root@PMM ~]<span class="comment"># chkconfig mysqld on</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载最新-MySQL-二进制安装、PXB备份工具及PT-Tools运维工具&quot;&gt;&lt;a href=&quot;#下载最新-MySQL-二进制安装、PXB备份工具及PT-Tools运维工具&quot; class=&quot;headerlink&quot; title=&quot;下载最新 MySQL 二进制安装、P
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>全面解析 MySQL 数据库性能调优</title>
    <link href="http://yoursite.com/2018/04/10/MySQL/MySQL_Tuning/"/>
    <id>http://yoursite.com/2018/04/10/MySQL/MySQL_Tuning/</id>
    <published>2018-04-10T12:17:58.024Z</published>
    <updated>2018-04-10T13:45:21.343Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL 数据库调优对于每个公司、DBA或者部分开者来讲都是特别关注的，一旦项目数据库的性能出现问题，导致的项目更容易故障、影响顾客体验，这些对公司来说是致命打击。但是优化并不是一蹴而就，这需要综合考虑项目开发过程中的进度，以及硬件成本。DBA 受限成本、项目进度，我们更多只能在有限的条件下，做最好的优化需求。下面我就MySQL 优化技术由浅深入讨论MySQL 调优：</p><h2 id="操作系统及硬件优化"><a href="#操作系统及硬件优化" class="headerlink" title="操作系统及硬件优化"></a>操作系统及硬件优化</h2><h3 id="CPU优化"><a href="#CPU优化" class="headerlink" title="CPU优化"></a>CPU优化</h3><p>关闭CPU的numa<br>numa的会导致mysqld产生swap，严重影响性能。因为numa架构的CPU和内存是bind的，如果CPU自己node中的内存不够，就会导致swap的产生，即使此时其它node中有大量的空闲内存，它也不会去使用。这就是numa的一个缺陷。numactl –interleave=all</p><h3 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h3><p>内存主要是要防止发生 swap。如果发生 swap 的话，从内存访问直接下降为硬盘访问，随机访问的速度下降10的6次方倍，也就是10万倍。顺序访问下降10倍左右。避免 MySQL 发生 swap</p><p>在CentOS 6.4及更新版本的内核中设置vm.swappiness=0，有可能会导致MySQL数据库所在的系统出现内存溢出(OOM)，可将vm.swappiness设置成1<br>vm.swappiness = 1</p><p>CentOS 7.x中需要查找到存在vm.swappiness参数的配置文件<br>find /usr/lib/tuned -name ‘*.conf’ -type f -exec grep “vm.swappiness” {} +</p><p>/usr/lib/tuned/latency-performance/tuned.conf:vm.swappiness=10<br>/usr/lib/tuned/throughput-performance/tuned.conf:vm.swappiness=10<br>/usr/lib/tuned/virtual-guest/tuned.conf:vm.swappiness = 30</p><p>设置 /proc/$(pidof -s mysqld)/oom_adj为较小的值(-15,-16或者-17)来尽量避免MySQL由于内存不足而被关闭<br>echo -17 &gt; /proc/$(pidof mysqld)/oom_adj</p><h3 id="IO优化"><a href="#IO优化" class="headerlink" title="IO优化"></a>IO优化</h3><p>IO调度算法：mysql服务器一定不要使用默认的CFQ调度算法。如果是SSD，那么应该使用NOOP调度算法，如果是磁盘，就应该使用Deadline调度算法。<br>echo deadline &gt; /sys/block/sda/queue/scheduler<br>这是临时修改，重启失效。永久修改，需要修改文件 /boot/grub/menu.lst 中的elevator=deadline 或者noop：<br>vi /boot/grub/menu.lst<br>kernel /boot/vmlinuz-2.6.18-8.el5 ro root=LABEL=/ elevator=deadline rhgb quiet</p><h3 id="文件系统优化"><a href="#文件系统优化" class="headerlink" title="文件系统优化"></a>文件系统优化</h3><p>1、文件系统的选择：在rhel6.4之前ext4性能比xfs好，因为xfs有lock争用的bug。但是6.4开始，xfs的bug被fix了。测试表明xfs性能比ext4好。<br>2、文件挂载选项：文件挂载时启用noatime,nodiratime，可以在 /etc/fstab 中进行修改。man mount 手册中有相关选项的说明。<br>3、文件挂载选项：barrier/nobarrier(如果有电池保护，可以启用nobarrier选项来提供性能)<br>4、文件挂载选项：data={journal|ordered|writeback}，如果有电池保护，启用 data=writeback可能会提升性能。<br>5、XFS挂载选项：inode64，如果采用的是XFS文件系统，并且一个分区容量大于1T时，需要采用inode64选项挂载，不然可能会错误的报”disk full”</p><p>打开文件数的限制，可以使用ulimit -a 查看目录的各位闲置，可以修改<br>open files 上被限制  ulimit -n 8192</p><p>永久修改，需要修改文件 /etc/security/limits.conf, 加上</p><ul><li>soft nofile</li><li>hard nofile </li></ul><p>session required pam_limits.so</p><h3 id="网络优化"><a href="#网络优化" class="headerlink" title="网络优化"></a>网络优化</h3><h2 id="MySQL-参数文件优化"><a href="#MySQL-参数文件优化" class="headerlink" title="MySQL 参数文件优化"></a>MySQL 参数文件优化</h2><p>open_files_limit<br>作用：该参数用于控制MySQL实例能够同时打开使用的文件句柄数目。<br>原因：当数据库中的表（MyISAM 引擎表在被访问的时候需要消耗文件描述符，InnoDB引擎会自己管理已经打开的表—table_open_cache）打开越来越多后，会消耗分配给每个实例的文件句柄数目，在数据库起初初始化实例的时候设置的open_files_limit，当打开的表数目超过该参数则会导致所有的数据库请求报错误。<br>现象：如果参数设置过小可导致应用报错</p><p>back_log<br>作用：MySQL每处理一个连接请求的时候都会对应的创建一个新线程与之对应，那么在主线程创建新线程期间，如果前端应用有大量的短连接请求到达数据库，MySQL 会限制此刻新的连接进入请求队列，由参数back_log控制，如果等待的连接数量超过back_log，则将不会接受新的连接请求，所以如果需要MySQL能够处理大量的短连接，需要提高此参数的大小。<br>现象：如果参数过小可能会导致应用报错</p><p>query_cache_size<br>作用：该参数用于控制MySQL query cache的内存大小；<br>原因：如果MySQL开启query cache，再执行每一个query的时候会先锁住query cache，然后判断是否存在query cache中，如果存在直接返回结果，如果不存在，则再进行引擎查询等操作；同时insert、update和delete这样的操作都会将query cahce失效掉，这种失效还包括结构或者索引的任何变化，cache失效的维护代价较高，会给MySQL带来较大的压力，所以当我们的数据库不是那么频繁的更新的时候，query cache是个好东西，但是如果反过来，写入非常频繁，并集中在某几张表上的时候，那么query cache lock的锁机制会造成很频繁的锁冲突，对于这一张表的写和读会互相等待query cache lock解锁，导致select的查询效率下降。<br>现象：数据库中有大量的连接状态为checking query cache for query、Waiting for query cache lock、storing result in query cache；<br>建议：MySQL默认是打开query cache功能的，如果您的实例打开了query cache，当出现上述情况后可以关闭query cache；当然有些情况也可以打开query cache，比如：巧用query cache解决数据库性能问题。</p><p>innodb_buffer_pool_size<br>作用：表示缓冲池字节大小，InnoDB缓存表和索引数据的内存区域。<br>原因：这个值设置的越大，在不止一次的访问相同的数据表数据时，消耗的磁盘I/O就越少。不过在实际的测试中，发现无限的增大这个值，带来的性能提升也并不显著，对CPU的压力反而增大，设置合理的值才是最优。MySQL 5.7.5版本后，innodb_buffer_pool_size 参数的值可以动态的设置，这意味着你可以在不启动服务器的情况下，重新设置缓冲区的大小。这种调整的操作是按块执行的。<br>建议：在一个专用的数据库服务器，则可能将其设置为高达70%-80%的机器物理内存大小。</p><p>innodb_log_buffer_size<br>作用：表示InnoDB写入到磁盘上的日志文件时使用的缓冲区的字节数。<br>原因：一个大的日志缓冲区允许大量的事务在提交之前不写日志到磁盘。因此，如果你有很多事务的更新，插入或删除很操作，通过这个参数会大量的节省了磁盘 I/O。<br>建议：</p><p>innodb_log_file_size<br>作用：表示在一个日志组每个日志文件的字节大小。<br>原因：该值越大，缓冲池中必要的检查点刷新活动就会越少，节省磁盘 I/O。但是越大的日志文件，MySQL 的崩溃恢复就越慢，尽管在 MySQL 5.5之后改进了恢复性能和日志文件恢复的代价。<br>建议：比较合适的值的范围是从1MB到 1/N 个的缓冲池大小，其中N是该组中的日志文件的数量。</p><p>innodb_max_dirty_pages_pct<br>作用：控制Innodb的脏页在缓冲中在那个百分比之下，值在范围1-100，默认为90。<br>原因：当Innodb的内存分配过大，致使 Swap 占用严重时，可以适当的减小调整这个值，使达到 Swap 空间释放出来。<br>建义：这个值最大在90%，最小在15%。太大，缓存中每次更新需要致换数据页太多，太小，放的数据页太小，更新操作太慢。</p><p>thread_cache_size<br>作用：线程池，线程缓存<br>原因：这个值表示可以重新利用保存在缓存中线程的数量，当断开连接时如果缓存中还有空间,那么客户端的线程将被放到缓存中,如果线程重新被请求，那么请求将从缓存中读取，如果缓存中是空的或者是新的请求，那么这个线程将被重新创建，如果有很多新的线程，增加这个值可以改善系统性能。每建立一个连接，都需要一个线程来与之匹配，此参数用来缓存空闲的线程，以至不被销毁，如果线程缓存中有空闲线程，这时候如果建立新连接，MYSQL就会很快的响应连接请求。<br>建议：1G ―&gt; 8、2G ―&gt; 16、3G ―&gt; 32、大于3G ―&gt; 64</p><p>innodb_io_capacity<br>innodb_io_capacity_max<br>作用：innodb_io_capacity：InnoDB 用来当刷新脏数据时，控制MySQL每秒执行的写IO量; innodb_io_capacity_max: 在压力下，控制当刷新脏数据时MySQL每秒执行的写IO量。<br>原因：<br>建议：</p><p>max_connections<br>作用：MySQL的最大连接数，增加mysqld 要求的文件描述符的数量。<br>原因：MySQL的最大连接数，如果服务器的并发连接请求量比较大，建议调高此值。连接数越多占用内存越多<br>现象：数值过小会经常出现ERROR 1040: Too many connections错误</p><p>innodb_flush_log_at_trx_commit</p><p>作用：InnoDB 将 redo buffer 中的更新记录写入到日志文件以及将日志文件数据刷新到磁盘的操作频率。<br>原因：<br>    0：在事务提交时，InnoDB 不会立即触发将缓存日志写到磁盘文件的操作，而是每秒触发一次缓存日志回写磁盘操作，并调用系统函数 fsync 刷新 IO 缓存。这种方式效率最高，也最不安全。<br>    1：在每个事务提交时，InnoDB 立即将缓存中的 redo 日志回写到日志文件，并调用 fsync 刷新 IO 缓存。<br>    2：在每个事务提交时，InnoDB 立即将缓存中的 redo 日志回写到日志文件，但并不马上调用 fsync 来刷新 IO 缓存，而是每秒只做一次磁盘IO 缓存刷新操作。只要操作系统不发生崩溃，数据就不会丢失，这种方式是对性能和数据安全的折中，其性能和数据安全性介于其他两种方式之间。<br>建议：innodb_flush_log_at_trx_commit 参数的默认值是 1，即每个事务提交时都会从 log buffer 写更新记录到日志文件，而且会实际刷新磁盘缓存，显然，这完全能满足事务的持久化要求，是最安全的，但这样会有较大的性能损失。</p><p>sync_binlog<br>作用：MySQL的二进制日志（binary log）同步刷新到磁盘的频率。<br>原因：当sync_binlog = 0，二进制日志从不进行二进制日志同步到磁盘上，而是根据操作系统刷其他文件的机制来刷新二进制日志到磁盘。</p><p>query_cache_size<br>查询缓存，对于查询的性能提高有很大帮助，但不宜开得过大，查询缓存的过期可能很频繁，过大查询缓存反而降低性能，增加服务器开销 </p><p>更多MySQL 参数优化请参考</p><h2 id="索引优化"><a href="#索引优化" class="headerlink" title="索引优化"></a>索引优化</h2><p>尽量避免在索引过的字符数据中，使用非打头字母搜索。这也使得引擎无法利用索引</p><p>更多MySQL 索引优化请参考 <a href="https://cai182081.github.io/2018/04/03/SQL/DB_INDEX_1/" target="_blank" rel="external">https://cai182081.github.io/2018/04/03/SQL/DB_INDEX_1/</a></p><h2 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h2><p>影响结果集是SQL优化的核心。影响结果集不是查询返回的记录数，而是查询所扫描的结果数。通过Explain或Desc分析SQL，rows列的值即为影响结果集（还可以通过慢查询日志的Rows_examined后面的数字得到）。</p><p>避免 select <em>，减少输出的数据量，提高传输速度<br>避免 in/exsits 子查询，尽可能 join 替换<br>避免对索引字段进行计算操作<br>避免在索引字段上使用函数<br>避免建立索引的列中使用空值<br>避免使用 or， 尽可能使用 union all 或者 union 代替<br>避免在索引字段上使用not，&lt;&gt;，!=<br>避免在索引列上使用IS NULL和IS NOT NULL<br>避免在索引列和连接列上出现数据类型/字符集的转换<br>避免 union，在可以允许数据重复的条件下使用union all代替<br>避免查询的无前缀模糊匹配 like ‘%**</em>‘<br>避免not in，尽可能使用not exists和left join代替<br>合理分页<br>合理使用索引和复合索引，建立更高效的复合索引替换单列索引</p><p>更多MySQL 参数优化请参考 SQL 调优技巧篇章 <a href="https://cai182081.github.io/2018/04/10/SQL/DB_SQL_1/#more" target="_blank" rel="external">https://cai182081.github.io/2018/04/10/SQL/DB_SQL_1/#more</a></p><h2 id="表结构设计优化"><a href="#表结构设计优化" class="headerlink" title="表结构设计优化"></a>表结构设计优化</h2><h3 id="数据类型优化："><a href="#数据类型优化：" class="headerlink" title="数据类型优化："></a>数据类型优化：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">1、字节占用小。</div><div class="line">　　使用最小的数据类型。——更少的磁盘空间，内存和CPU缓存。而且需要的CPU的周期也更少。</div><div class="line"></div><div class="line">使用正确合适的类型，不要将数字存储为字符串。</div><div class="line"> 尽可能地使用最有效(最小)的数据类型。MySQL有很多节省磁盘空间和内存的专业化类型。</div><div class="line"> 尽可能使用较小的整数类型使表更小。例如，MEDIUMINT经常比INT好一些，因为MEDIUMINT列使用的空间要少25%。</div><div class="line"> 如果可能，声明列为NOT NULL。它使任何事情更快而且每列可以节省一位。注意如果在应用程序中确实需要NULL，应该毫无疑问使用它，只是避免 默认地在所有列上有它。</div><div class="line"></div><div class="line">2、简单就好。</div><div class="line">　　整数代价小于字符。——因为字符集和排序规则使字符比较更复杂。</div><div class="line">　　1&gt;mysql内建类型（如timestamp,date)优于使用字符串保存。</div><div class="line">　　2&gt;使用整数保存ip地址。</div><div class="line"> </div><div class="line">3、避免字段为 NUL L类型——如果计划对列进行索引，尽量避免把列设置为NULL。尽可能把字段定义为NOT NULL。——可以放置一个默认值，如‘’，0，特殊字符串。</div><div class="line">　　原因：</div><div class="line">    1、MYSQL难以优化NULL列。NULL列会使索引，索引统计和值更加复杂。</div><div class="line">    2、NULL列需要更多的存储空间，还需要在MYSQL内部进行特殊处理。</div><div class="line">    3、NULL列加索引，每条记录都需要一个额外的字节，还导致MyISAM中固定大小的索引变成可变大小的索引。</div><div class="line">    4、如果是一个组合索引，那么这个NULL 类型的字段会极大影响整个索引的效率。</div><div class="line">    5、NULL 在索引中的处理也是特殊的，也会占用额外的存放空间。</div><div class="line"></div><div class="line">4、区分开 TINYINT / INT / BIGINT 的选择，因为三者所占用的存储空间也有很大的差别，能确定不会使用负数的字段，建议添加unsigned定义，当然，如果数据量较小的数据库，也可以不用严格区分三个整数类型。</div><div class="line">5、非万不得已不要使用 TEXT、BLOB 数据类型，其处理方式决定了他的性能要低于char或者是varchar类型的处理</div><div class="line">6、定长字段，建议使用 CHAR 类型，不定长字段尽量使用 VARCHAR，且仅仅设定适当的最大长度，而不是非常随意的给一个很大的最大长度限定，因为不同的长度范围，MySQL也会有不一样的存储处理。</div><div class="line">7、间类型：尽量使用TIMESTAMP类型，因为其存储空间只需要 DATETIME 类型的一半。对于只需要精确到某一天的数据类型，建议使用DATE类型，因为他的存储空间只需要3个字节，比TIMESTAMP还少。</div><div class="line">8、数字类型：非万不得已不要使用DOUBLE，不仅仅只是存储长度的问题，同时还会存在精确性的问题。同样，固定精度的小数，也不建议使用DECIMAL，建议乘以固定倍数转换成整数存储，可以大大节省存储空间，且不会带来任何附加维护成本。</div></pre></td></tr></table></figure><h3 id="聚集索引字段类型优化"><a href="#聚集索引字段类型优化" class="headerlink" title="聚集索引字段类型优化"></a>聚集索引字段类型优化</h3><p>主键的索引结构中，即存储了主键值，又存储了行数据，这种结构称为“聚集索引”。在插入数据时，数据节点会分裂，这个问题比较严重，节点下存储了“行数据”，分裂的时候，还要移动行数据。如果主键是无规律的，则会加速它的数据节点分裂，且效率极低。主键，尽量用整型，而且是递增的整型。如果是无规律的数据，将会产生页的分裂，影响速度。索引长度直接影响索引文件大小，影响增删改的速度，并间接影响查询速度（占用内存多）。因为主键索引在物理存放时是有序的，如果主键的值是无序的，那么主键每次插入时，索引文件都重新进行排序，会产生额外的数据消耗，另外主键的叶子上存放的数据，还会导致叶子数据行的移动和分裂，又会产生一些消耗，所以主键尽量用整型，且自增的类型。</p><h3 id="存储引擎优化"><a href="#存储引擎优化" class="headerlink" title="存储引擎优化"></a>存储引擎优化</h3><p>使用InnoDB引擎</p><h2 id="缓存优化"><a href="#缓存优化" class="headerlink" title="缓存优化"></a>缓存优化</h2><h2 id="读写分离优化"><a href="#读写分离优化" class="headerlink" title="读写分离优化"></a>读写分离优化</h2><p>MySQL 读写分离基本原理是让 Master 数据库处理写操作，Slave 数据库处理读操作。Master 将写操作的变更同步到各个 Slave 节点。<br>MySQL 读写分离基本原理是让 Master 数据库处理事务性读写操作，而 Slave 数据库处理非事物只读 SELECT 查询。利用 MySQL 数据库复制技术把 Master 节点上事务性操作实时同步到 Slave 节点。降低单台服务器的IO、CPU资源压力。</p><p>MySQL读写分离能提高系统性能的原因在于：<br>物理服务器增加，机器处理能力提升。拿硬件换性能。<br>Master-Slave 只负责各自的读和写操作，极大程度缓解X锁和S锁争用。<br>通过多个 Slave 分摊读取。虽然总个集群的 SELECT 操作并没有减少，但降低了单台服务器的IO、CPU和带宽压力。另外，当读取被分摊后，又间接提高了 Master 写入的性能<br>Slave 可以配置 MyISAM 引擎，提升查询性能以及节约系统开销。<br>Master 直接写是并发的，Slave 通过主库发送来的 binlog 恢复数据是异步。<br>Slave 可以单独设置一些参数来提升其读的性能。<br>增加冗余，提高可用性。</p><h2 id="分库分表优化"><a href="#分库分表优化" class="headerlink" title="分库分表优化"></a>分库分表优化</h2><p>数据库中的数据量不一定是可控的，在未进行分库分表的情况下，随着时间和业务的发展，库中的表会越来越多，表中的数据量也会越来越大，相应地，数据操作，增删改查的开销也会越来越大；另外，由于无法进行分布式式部署，而一台服务器的资源（CPU、磁盘、内存、IO等）是有限的，最终数据库所能承载的数据量、数据处理能力都将遭遇性能瓶颈。 说白了，就是分担写负载</p><h3 id="数据的垂直切分"><a href="#数据的垂直切分" class="headerlink" title="数据的垂直切分"></a>数据的垂直切分</h3><p>数据的垂直切分，也可以称之为纵向切分。将数据库想象成为由很多个一大块一大块的“数据块”（表）组成，我们垂直的将这些“数据块”切开，然后将他们分散到多台数据库主机上面。这样的切分方法就是一个垂直（纵向）的数据切分。<br>垂直切分的优点<br>数据库的拆分简单明了，拆分规则明确；<br>应用程序模块清晰明确，整合容易；<br>数据维护方便易行，容易定位；</p><p>垂直切分的缺点<br>部分表关联无法在数据库级别完成，需要在程序中完成；<br>对于访问极其频繁且数据量超大的表仍然存在性能平静，不一定能满足要求；<br>事务处理相对更为复杂；<br>切分达到一定程度之后，扩展性会遇到限制；<br>过读切分可能会带来系统过渡复杂而难以维护。</p><h3 id="数据的水平切分"><a href="#数据的水平切分" class="headerlink" title="数据的水平切分"></a>数据的水平切分</h3><p>数据的垂直切分基本上可以简单的理解为按照表按模块来切分数据，而水平切分就不再是按照表或者是功能模块来切分了。一般来说，简单的水平切分主要是将某个访问极其平凡的表再按照某个字段的某种规则来分散到多个表之中，每个表中包含一部分数据。</p><p>水平切分的优点<br>表关联基本能够在数据库端全部完成；<br>不会存在某些超大型数据量和高负载的表遇到瓶颈的问题；<br>应用程序端整体架构改动相对较少；<br>事务处理相对简单；<br>只要切分规则能够定义好，基本上较难遇到扩展性限制；</p><p>水平切分的缺点<br>切分规则相对更为复杂，很难抽象出一个能够满足整个数据库的切分规则；<br>后期数据的维护难度有所增加，人为手工定位数据更困难；<br>应用系统各模块耦合度较高，可能会对后面数据的迁移拆分造成一定的困难。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MySQL 数据库调优对于每个公司、DBA或者部分开者来讲都是特别关注的，一旦项目数据库的性能出现问题，导致的项目更容易故障、影响顾客体验，这些对公司来说是致命打击。但是优化并不是一蹴而就，这需要综合考虑项目开发过程中的进度，以及硬件成本。DBA 受限成本、项目进度，我们更
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL 优化" scheme="http://yoursite.com/tags/MySQL-%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>SQL 调优技巧</title>
    <link href="http://yoursite.com/2018/04/10/SQL/DB_SQL_1/"/>
    <id>http://yoursite.com/2018/04/10/SQL/DB_SQL_1/</id>
    <published>2018-04-10T12:11:04.110Z</published>
    <updated>2018-04-10T13:39:41.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="减少访问数据库的次数"><a href="#减少访问数据库的次数" class="headerlink" title="减少访问数据库的次数"></a>减少访问数据库的次数</h2><p>去掉不必要的查询和数据检索。其实在项目的实际应用中，很多查询条件是可有可无的，从源头上避免</p><h2 id="减少访问的数据量"><a href="#减少访问的数据量" class="headerlink" title="减少访问的数据量"></a>减少访问的数据量</h2><p>控制高并发业务尽可能通过时间字段对数据冷热隔离，高并发下只针对热数据经行增删改查。冷数据及时归档和隔离，经Hadoop/Spark大数据、ETL、BI等技术对数据处理后，再插入数据库进行展示</p><h2 id="尽量避免-SELECT"><a href="#尽量避免-SELECT" class="headerlink" title="尽量避免 SELECT *"></a>尽量避免 SELECT *</h2><p>消除对数据库字典的解析，减少输出的数据量，降低网络流量的耗损，提高传输速度。必要时，可以通过覆盖索引优化</p><h2 id="禁止在SQL中对列进行数学运算"><a href="#禁止在SQL中对列进行数学运算" class="headerlink" title="禁止在SQL中对列进行数学运算"></a>禁止在SQL中对列进行数学运算</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT e.ename FROM emp e WHERE e.sal*1.1 &gt; 900;</div><div class="line"></div><div class="line">高效：SELECT e.ename FROM emp e WHERE e.sal &gt; 900/1.1;</div></pre></td></tr></table></figure><h2 id="禁止SQL对列进行函数运算"><a href="#禁止SQL对列进行函数运算" class="headerlink" title="禁止SQL对列进行函数运算"></a>禁止SQL对列进行函数运算</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">低效：SELECT e.ename</div><div class="line">          FROM emp e</div><div class="line">         WHERE DATE_FORMAT(e.date, ’%Y%m%d’) = <span class="string">'20160516'</span>;</div><div class="line"></div><div class="line">高效：SELECT e.ename</div><div class="line">          FROM emp e</div><div class="line">         WHERE e.date &gt; = <span class="string">'2016-05-16 00:00:01'</span></div><div class="line">         AND e.date &lt; <span class="string">'2016-05-17 00:00:00'</span>;</div></pre></td></tr></table></figure><h2 id="禁止使用反向查询，使用-gt-、-lt-等，避免使用-和-lt-gt-命令"><a href="#禁止使用反向查询，使用-gt-、-lt-等，避免使用-和-lt-gt-命令" class="headerlink" title="禁止使用反向查询，使用&gt;、&lt;等，避免使用!=和&lt;&gt;命令"></a>禁止使用反向查询，使用&gt;、&lt;等，避免使用!=和&lt;&gt;命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：select * from emp e <span class="built_in">where</span> e.salary != 3000;</div><div class="line"></div><div class="line">高效：select * from emp e <span class="built_in">where</span> e.salary &lt; 3000 or e.salary &gt; 3000;</div></pre></td></tr></table></figure><h2 id="用-gt-替代-gt"><a href="#用-gt-替代-gt" class="headerlink" title="用 &gt;= 替代 &gt;"></a>用 &gt;= 替代 &gt;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT loc_id, loc_desc, region FROM location WHERE loc_id &gt; 10 AND loc_desc &gt; 10;</div><div class="line"></div><div class="line">高效：SELECT loc_id, loc_desc, region FROM location WHERE loc_id &gt;= 11 AND loc_desc &gt;= 11;</div></pre></td></tr></table></figure><h2 id="使用-IN-代替-OR，SQL语句中-IN-包含的值不宜过多"><a href="#使用-IN-代替-OR，SQL语句中-IN-包含的值不宜过多" class="headerlink" title="使用 IN 代替 OR，SQL语句中 IN 包含的值不宜过多"></a>使用 IN 代替 OR，SQL语句中 IN 包含的值不宜过多</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT * FROM location WHERE loc_id = 10 OR loc_id = 20 OR loc_id = 30;</div><div class="line"></div><div class="line">高效：SELECT * FROM location WHERE loc_id IN (10,20,30);</div></pre></td></tr></table></figure><h2 id="禁止模糊匹配-前导查询"><a href="#禁止模糊匹配-前导查询" class="headerlink" title="禁止模糊匹配%前导查询"></a>禁止模糊匹配%前导查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT e.ename FROM emp e WHERE e.ename LIKE <span class="string">'%abc'</span>;</div><div class="line"></div><div class="line">高效：SELECT e.ename FROM emp e WHERE e.ename LIKE <span class="string">'abc%'</span>;</div></pre></td></tr></table></figure><h2 id="使用-UNION-替换-OR-适用于索引列"><a href="#使用-UNION-替换-OR-适用于索引列" class="headerlink" title="使用 UNION 替换 OR(适用于索引列)"></a>使用 UNION 替换 OR(适用于索引列)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">低效：SELECT loc_id, loc_desc, region</div><div class="line">          FROM location</div><div class="line">         WHERE loc_id = 10 OR region = <span class="string">'MELBOURNE'</span>;</div><div class="line"></div><div class="line">高效：SELECT loc_id, loc_desc, region  </div><div class="line">        FROM location</div><div class="line">        WHERE loc_id = 10</div><div class="line">    UNION</div><div class="line">    SELECT loc_id, loc_desc, region</div><div class="line">        FROM location</div><div class="line">        WHERE region = <span class="string">'MELBOURNE'</span>;</div></pre></td></tr></table></figure><h2 id="在明显不会存在重复值的查询时，使用-UNION-ALL-代替-UNION，避免排序"><a href="#在明显不会存在重复值的查询时，使用-UNION-ALL-代替-UNION，避免排序" class="headerlink" title="在明显不会存在重复值的查询时，使用 UNION ALL 代替 UNION，避免排序"></a>在明显不会存在重复值的查询时，使用 UNION ALL 代替 UNION，避免排序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">低效：SELECT ACCT_NUM, BALANCE_AMT</div><div class="line">          FROM DEBIT_TRANSACTIONS</div><div class="line">        WHERE TRAN_DATE = <span class="string">'31 - DEC - 95'</span></div><div class="line">       UNION</div><div class="line">       SELECT ACCT_NUM, BALANCE_AMT</div><div class="line">          FROM DEBIT_TRANSACTIONS</div><div class="line">         WHERE TRAN_DATE = <span class="string">'31 - DEC - 95'</span>;</div><div class="line"></div><div class="line">高效：SELECT ACCT_NUM, BALANCE_AMT</div><div class="line">          FROM DEBIT_TRANSACTIONS</div><div class="line">         WHERE TRAN_DATE = <span class="string">'31 - DEC - 95'</span></div><div class="line">    UNION ALL</div><div class="line">    SELECT ACCT_NUM, BALANCE_AMT</div><div class="line">          FROM DEBIT_TRANSACTIONS</div><div class="line">         WHERE TRAN_DATE = <span class="string">'31 - DEC - 95'</span>;</div></pre></td></tr></table></figure><h2 id="避免在索引列上进行NULL值的判断"><a href="#避免在索引列上进行NULL值的判断" class="headerlink" title="避免在索引列上进行NULL值的判断"></a>避免在索引列上进行NULL值的判断</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效: SELECT … FROM  department  WHERE  DEPT_CODE IS NOT NULL;</div><div class="line"></div><div class="line">高效: SELECT … FROM  department  WHERE  DEPT_CODE &gt;= 0;</div></pre></td></tr></table></figure><h2 id="避免-HAVING，用-WHERE-子句替换-HAVING-子句"><a href="#避免-HAVING，用-WHERE-子句替换-HAVING-子句" class="headerlink" title="避免 HAVING，用 WHERE 子句替换 HAVING 子句"></a>避免 HAVING，用 WHERE 子句替换 HAVING 子句</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT job, AVG(sal) FROM emp GROUP BY job HAVING job = <span class="string">'PRESIDENT'</span> OR job = <span class="string">'MANAGER'</span>;</div><div class="line"></div><div class="line">高效：SELECT job, AVG(sal) FROM emp WHERE job = <span class="string">'PRESIDENT'</span> OR job = <span class="string">'MANAGER'</span> GROUP BY job;</div></pre></td></tr></table></figure><h2 id="用-EXISTS-替换-DISTINCT"><a href="#用-EXISTS-替换-DISTINCT" class="headerlink" title="用 EXISTS 替换 DISTINCT"></a>用 EXISTS 替换 DISTINCT</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">低效: SELECT DISTINCT DEPT_NO,DEPT_NAME FROM DEPT D , EMP E</div><div class="line">         WHERE D.DEPT_NO = E.DEPT_NO;</div><div class="line"></div><div class="line">高效: SELECT DEPT_NO,DEPT_NAME FROM DEPT D</div><div class="line">         WHERE  EXISTS</div><div class="line">           ( SELECT ‘X’ FROM EMP E WHERE E.DEPT_NO = D.DEPT_NO);</div></pre></td></tr></table></figure><h2 id="合理的分页方式以提高分页效率"><a href="#合理的分页方式以提高分页效率" class="headerlink" title="合理的分页方式以提高分页效率"></a>合理的分页方式以提高分页效率</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT e.ename FROM emp e <span class="built_in">limit</span> 10000,10;</div><div class="line"></div><div class="line">高效：SELECT e.ename FROM emp e  WHERE e.id &gt;=10000 <span class="built_in">limit</span> 10;</div></pre></td></tr></table></figure><h2 id="禁止order-by-rand-查询"><a href="#禁止order-by-rand-查询" class="headerlink" title="禁止order by rand()查询"></a>禁止order by rand()查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">低效：SELECT * FROM emp ORDER BY RAND() LIMIT 1;</div><div class="line"></div><div class="line">高效：SELECT *</div><div class="line">        FROM emp AS t1</div><div class="line">        JOIN (SELECT ROUND(RAND() *</div><div class="line">                        ((SELECT MAX(id) FROM EMP) - (SELECT MIN(id) FROM EMP)) +</div><div class="line">                        (SELECT MIN(id) FROM emp)) AS id) AS t2</div><div class="line">            WHERE t1.id &gt;= t2.id</div><div class="line">        ORDER BY t1.id LIMIT 1;</div></pre></td></tr></table></figure><h2 id="避免使用-in-exists-子查询，用join替换"><a href="#避免使用-in-exists-子查询，用join替换" class="headerlink" title="避免使用 in/exists 子查询，用join替换"></a>避免使用 in/exists 子查询，用join替换</h2><p>in 是把外表和内表作 hash 连接，而 exists 是对外表作 loop 循环，每次 loop 循环再对内表进行查询，认为 exists 比 in 效率高的说法是不准确的。如果查询的两个表的数据量大小相当，那么用 in 和 exists 子查询效率差别不大；如果两个表中一个较小一个较大，则子查询表大的用 exists 更为效率，子查询表小的用 in 更效率，但对于 join 来说，根据代价来确定表的连接顺序，执行效率总是最高。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">emp 数据量小于 department ：</div><div class="line">低效：SELECT * FROM emp e WHERE e.name IN (SELECT d.name FROM department d)</div><div class="line"></div><div class="line">低效：SELECT * FROM department d WHERE EXISTS (SELECT 1 FROM emp e WHERE e.name = d.name)</div><div class="line"></div><div class="line">高效：SELECT * FROM emp e INNER JOIN department d ON e.name = d.name</div></pre></td></tr></table></figure></p><h2 id="避免使用-not-in-子查询，使用-not-exists-或-left-join替换"><a href="#避免使用-not-in-子查询，使用-not-exists-或-left-join替换" class="headerlink" title="避免使用 not in 子查询，使用 not exists 或 left join替换"></a>避免使用 not in 子查询，使用 not exists 或 left join替换</h2><p>查询语句使用了not in，那么对内外表都进行全表扫描，没有用到索引；而 not exists 的子查询依然能用到表上的索引。所以无论哪个表大，用not exists都比not in 要快。<br>注意:NOT EXISTS 与 NOT IN 不能完全互相替换，看具体的需求。如果选择的列可以为空，则不能被替换。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">低效：SELECT * FROM emp e WHERE e.name NOT IN (SELECT d.name FROM department d)</div><div class="line"></div><div class="line">高效：SELECT * FROM emp e WHERE NOT EXISTS (SELECT 1 FROM department d WHERE d.name = e.name)</div><div class="line"></div><div class="line">高效：SELECT * FROM emp e LEFT JOIN department d ON e.name = d.name WHERE d.name IS NULL;</div></pre></td></tr></table></figure></p><h2 id="子查询展开优化"><a href="#子查询展开优化" class="headerlink" title="子查询展开优化"></a>子查询展开优化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">低效：SELECT * FROM t1, (SELECT * FROM t2 WHERE t2.a2 &gt; 10) v_t2 WHERE t1.a1 &lt; 10 AND v_t2.a2 &lt; 20;</div><div class="line"></div><div class="line">高效：SELECT * FROM t1, t2 WHERE t2.a2 &gt; 10 AND t1.a1 &lt; 10 AND t2.a2 &lt; 20;</div></pre></td></tr></table></figure><h2 id="子查询合并优化"><a href="#子查询合并优化" class="headerlink" title="子查询合并优化"></a>子查询合并优化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">低效：SELECT *</div><div class="line">        FROM t1</div><div class="line">      WHERE a1 &lt; 10 </div><div class="line">      AND (EXISTS </div><div class="line">            (SELECT a2 FROM t2 WHERE t2.a2 &lt; 5 AND t2.b2 = 1) </div><div class="line">            OR EXISTS</div><div class="line">              (SELECT a2 FROM t2 WHERE t2.a2 &lt; AND t2.b2 = 2));</div><div class="line"></div><div class="line">高效：SELECT * FROM t1 WHERE t2.a2 &lt; 5 AND (t2.b2 = 1 OR t2.b2 = 2);</div></pre></td></tr></table></figure><h2 id="避免隐式转换"><a href="#避免隐式转换" class="headerlink" title="避免隐式转换"></a>避免隐式转换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">1、varchar与int类型转换</div><div class="line">低效：SELECT * FROM emp e WHERE e.name = 123;</div><div class="line"></div><div class="line">高效：SELECT * FROM emp e WHERE e.name = <span class="string">'123'</span>;</div><div class="line"></div><div class="line">2、datetime与varchar类型转换</div><div class="line">低效：SELECT * FROM emp e WHERE e.date LIKE CONCAT(<span class="string">'2018-04-10'</span>,<span class="string">'%'</span>);</div><div class="line"></div><div class="line">高效：SELECT * FROM emp e WHERE e.date BETWEEN <span class="string">'2018-04-10 00:00:00'</span> AND <span class="string">'2018-04-10 23:59:59'</span>;</div><div class="line"></div><div class="line">3、varchar与varbinary类型转换</div><div class="line"></div><div class="line">4、不通字符集间的隐式转换</div><div class="line"></div><div class="line">5、同字符集，不同字符集顺序间的隐式转换</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;减少访问数据库的次数&quot;&gt;&lt;a href=&quot;#减少访问数据库的次数&quot; class=&quot;headerlink&quot; title=&quot;减少访问数据库的次数&quot;&gt;&lt;/a&gt;减少访问数据库的次数&lt;/h2&gt;&lt;p&gt;去掉不必要的查询和数据检索。其实在项目的实际应用中，很多查询条件是可有可无的
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库优化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 3.0.1 完全分布式集群搭建</title>
    <link href="http://yoursite.com/2018/04/06/Hadoop/Hadoop_Cluster/"/>
    <id>http://yoursite.com/2018/04/06/Hadoop/Hadoop_Cluster/</id>
    <published>2018-04-06T08:01:39.233Z</published>
    <updated>2018-04-06T08:18:15.392Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hadoop-集群服务器及节点规划"><a href="#Hadoop-集群服务器及节点规划" class="headerlink" title="Hadoop 集群服务器及节点规划"></a>Hadoop 集群服务器及节点规划</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h2 id="服务器主机名及hosts文件配置"><a href="#服务器主机名及hosts文件配置" class="headerlink" title="服务器主机名及hosts文件配置"></a>服务器主机名及hosts文件配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#all</span></div><div class="line"><span class="built_in">echo</span> node$ &gt; /etc/hostname</div><div class="line"></div><div class="line">cat &gt;&gt; /etc/hosts &lt;&lt;EOF</div><div class="line">192.168.1.10 node1</div><div class="line">192.168.1.11 node2</div><div class="line">192.168.1.12 node3</div><div class="line">192.168.1.13 node4</div><div class="line">EOF</div></pre></td></tr></table></figure><h2 id="关闭服务器防火墙"><a href="#关闭服务器防火墙" class="headerlink" title="关闭服务器防火墙"></a>关闭服务器防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">systemctl stop firewalld.service</div><div class="line">systemctl <span class="built_in">disable</span> firewalld.service</div><div class="line">firewall-cmd --state</div><div class="line"></div><div class="line">setenforce 0</div><div class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config</div></pre></td></tr></table></figure><h3 id="创建Hadoop集群用户组和用户、设置密码"><a href="#创建Hadoop集群用户组和用户、设置密码" class="headerlink" title="创建Hadoop集群用户组和用户、设置密码"></a>创建Hadoop集群用户组和用户、设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">groupadd hadoop</div><div class="line">useradd hadoop -g hadoop</div><div class="line">passwd hadoop</div></pre></td></tr></table></figure><h2 id="服务器Hadoop用户SSH免密认证"><a href="#服务器Hadoop用户SSH免密认证" class="headerlink" title="服务器Hadoop用户SSH免密认证"></a>服务器Hadoop用户SSH免密认证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#all</span></div><div class="line">ssh-keygen -t rsa -P <span class="string">''</span> -f ~/.ssh/id_rsa</div><div class="line"></div><div class="line"><span class="comment">#node1</span></div><div class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div><div class="line"></div><div class="line"><span class="comment">#node&#123;2-4&#125;</span></div><div class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop@node1</div><div class="line"></div><div class="line"><span class="comment">#node1</span></div><div class="line">chmod 600 ~/.ssh/authorized_keys</div><div class="line"><span class="keyword">for</span> a <span class="keyword">in</span> &#123;2..4&#125;; <span class="keyword">do</span> scp ~/.ssh/authorized_keys hadoop@node<span class="variable">$a</span>:~/.ssh/ ; <span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment">#all</span></div><div class="line">ssh hadoop@node<span class="variable">$a</span></div></pre></td></tr></table></figure><h2 id="JDK安装及JAVA环境变量配置"><a href="#JDK安装及JAVA环境变量配置" class="headerlink" title="JDK安装及JAVA环境变量配置"></a>JDK安装及JAVA环境变量配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">sudo rpm -qa | grep java | xargs rpm -e --nodeps</div><div class="line">sudo tar -zxf jdk-8u151-linux-x64.tar.gz -C /usr/<span class="built_in">local</span>/</div><div class="line">sudo ln -sv /usr/<span class="built_in">local</span>/jdk1.8.0_151 /usr/<span class="built_in">local</span>/jdk</div><div class="line"></div><div class="line">sudo cat &gt;&gt; /etc/profile &lt;&lt;EOF</div><div class="line"><span class="comment"># JDK</span></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk</div><div class="line"><span class="built_in">export</span> JRE_HOME=\<span class="variable">$JAVA_HOME</span>/jre</div><div class="line"><span class="built_in">export</span> JAVA_LIBRARY_PATH=\<span class="variable">$HADOOP_HOME</span>/lib/native </div><div class="line"><span class="built_in">export</span> CLASSPATH=.:\<span class="variable">$JAVA_HOME</span>/lib/dt.jar:\<span class="variable">$JAVA_HOME</span>/lib/tools.jar</div><div class="line"><span class="built_in">export</span> PATH=\<span class="variable">$PATH</span>:\<span class="variable">$JAVA_HOME</span>/bin:\<span class="variable">$JRE_HOME</span>/bin</div><div class="line">EOF</div><div class="line">sudo <span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure><h2 id="Hadoop集群搭建"><a href="#Hadoop集群搭建" class="headerlink" title="Hadoop集群搭建"></a>Hadoop集群搭建</h2><h3 id="创建Hadoop集群用户组和用户、设置密码-1"><a href="#创建Hadoop集群用户组和用户、设置密码-1" class="headerlink" title="创建Hadoop集群用户组和用户、设置密码"></a>创建Hadoop集群用户组和用户、设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">groupadd hadoop</div><div class="line">useradd hadoop -g hadoop</div><div class="line">passwd hadoop</div></pre></td></tr></table></figure><h3 id="下载Hadoop，并解压hadoop"><a href="#下载Hadoop，并解压hadoop" class="headerlink" title="下载Hadoop，并解压hadoop"></a>下载Hadoop，并解压hadoop</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> HADOOP_VERSION=hadoop-3.0.0</div><div class="line">sudo tar -zxf /dba/tools/<span class="variable">$HADOOP_VERSION</span>.tar.gz -C /usr/<span class="built_in">local</span>/</div><div class="line">sudo ln -sv /usr/<span class="built_in">local</span>/<span class="variable">$HADOOP_VERSION</span> /usr/<span class="built_in">local</span>/hadoop</div><div class="line">sudo chown -R hadoop:hadoop /usr/<span class="built_in">local</span>/<span class="variable">$HADOOP_VERSION</span></div></pre></td></tr></table></figure><h3 id="配置Hadoop-集群环境变量"><a href="#配置Hadoop-集群环境变量" class="headerlink" title="配置Hadoop 集群环境变量"></a>配置Hadoop 集群环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">cat &gt;&gt; ~/.bash_profile &lt;&lt;EOF</div><div class="line"><span class="comment"># Zookeeper</span></div><div class="line"><span class="built_in">export</span> ZOO_HOME=/usr/<span class="built_in">local</span>/zookeeper </div><div class="line"><span class="built_in">export</span> ZOO_LOG_DIR=/data/hadoop/zookeeper/logs</div><div class="line"><span class="built_in">export</span> PATH=\<span class="variable">$PATH</span>:\<span class="variable">$ZOO_HOME</span>/bin</div><div class="line"></div><div class="line"><span class="comment"># Hadoop</span></div><div class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/hadoop</div><div class="line"><span class="built_in">export</span> HADOOP_PID_DIR=\<span class="variable">$HADOOP_HOME</span>/pids </div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=\<span class="variable">$HADOOP_HOME</span>/lib/native </div><div class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">"\$HADOOP_OPTS-Djava.library.path=\$HADOOP_HOME/lib:\$HADOOP_HOME/lib/native"</span> </div><div class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=\<span class="variable">$HADOOP_HOME</span> </div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=\<span class="variable">$HADOOP_HOME</span> </div><div class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=\<span class="variable">$HADOOP_HOME</span> </div><div class="line"><span class="built_in">export</span> HADOOP_YARN_HOME=\<span class="variable">$HADOOP_HOME</span> </div><div class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=\<span class="variable">$HADOOP_HOME</span>/etc/hadoop </div><div class="line"><span class="built_in">export</span> HADOOP_ROOT_LOGGER=INFO,console  </div><div class="line"><span class="built_in">export</span> PATH=\<span class="variable">$PATH</span>:\<span class="variable">$HADOOP_HOME</span>/bin:\<span class="variable">$HADOOP_HOME</span>/sbin</div><div class="line">EOF</div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure><h3 id="配置Hadoop集群基本配置文件"><a href="#配置Hadoop集群基本配置文件" class="headerlink" title="配置Hadoop集群基本配置文件"></a>配置Hadoop集群基本配置文件</h3><h4 id="配置hadoop-env-sh"><a href="#配置hadoop-env-sh" class="headerlink" title="配置hadoop-env.sh"></a>配置hadoop-env.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i <span class="string">'/# export JAVA_HOME=/a\export JAVA_HOME=/usr/local/jdk'</span> /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/hadoop-env.sh</div></pre></td></tr></table></figure><h4 id="配置works"><a href="#配置works" class="headerlink" title="配置works"></a>配置works</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cat &gt;&gt; /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/workers &lt;&lt;EOF</div><div class="line">node1</div><div class="line">node2</div><div class="line">node3</div><div class="line">node4</div><div class="line">EOF</div></pre></td></tr></table></figure><h4 id="配置core-site-xml"><a href="#配置core-site-xml" class="headerlink" title="配置core-site.xml"></a>配置core-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">vi /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/core-site.xml</div><div class="line"></div><div class="line">&lt;configuration&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</div><div class="line">&lt;value&gt;hdfs://node1:9000&lt;/value&gt;</div><div class="line">&lt;final&gt;<span class="literal">true</span>&lt;/final&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</div><div class="line">        &lt;value&gt;file:/usr/<span class="built_in">local</span>/hadoop/tmp&lt;/value&gt;</div><div class="line">        &lt;description&gt;abase <span class="keyword">for</span> other temporary directories.&lt;/description&gt;</div><div class="line">    &lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;io.file.buffer.size&lt;/name&gt;</div><div class="line">&lt;value&gt;131584&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;hadoop.proxyuser.hadoop.hosts&lt;/name&gt;</div><div class="line">&lt;value&gt;*&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;hadoop.proxyuser.hadoop.groups&lt;/name&gt;</div><div class="line">&lt;value&gt;*&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;hadoop.native.lib&lt;/name&gt;</div><div class="line">&lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:2181,node2:2181,node3:2181&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;ha.zookeeper.session-timeout.ms&lt;/name&gt;</div><div class="line">&lt;value&gt;2000&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h4 id="配置hdfs-site-xml"><a href="#配置hdfs-site-xml" class="headerlink" title="配置hdfs-site.xml"></a>配置hdfs-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">vi /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/hdfs-site.xml</div><div class="line"></div><div class="line">&lt;configuration&gt;</div><div class="line">&lt;property&gt;  </div><div class="line">&lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;  </div><div class="line">&lt;value&gt;node2:9001&lt;/value&gt;  </div><div class="line">&lt;/property&gt;  </div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</div><div class="line">&lt;value&gt;3&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</div><div class="line">&lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</div><div class="line">&lt;value&gt;file:///data/hadoop/hdfs/name&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</div><div class="line">&lt;value&gt;file:///data/hadoop/hdfs/data&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;fs.checkpoint.dir&lt;/name&gt;</div><div class="line">&lt;value&gt;file:///data/hadoop/hdfs/check&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;fs.checkpoint.edits.dir&lt;/name&gt;</div><div class="line">&lt;value&gt;file:///data/hadoop/hdfs/check&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</div><div class="line">&lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h4 id="配置mapred-site-xml"><a href="#配置mapred-site-xml" class="headerlink" title="配置mapred-site.xml"></a>配置mapred-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">vi /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/mapred-site.xml</div><div class="line"></div><div class="line">&lt;configuration&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</div><div class="line">&lt;value&gt;yarn&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:10020&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:19888&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h4 id="配置yarn-site-xml"><a href="#配置yarn-site-xml" class="headerlink" title="配置yarn-site.xml"></a>配置yarn-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">vi /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/yarn-site.xml</div><div class="line"></div><div class="line">&lt;configuration&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:8030&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:8031&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:8032&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:8033&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</div><div class="line">&lt;value&gt;node1:8088&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.nodemanager.auxservices.mapreduce_shuffle.class&lt;/name&gt;</div><div class="line">&lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.resourcemanager.scheduler.class&lt;/name&gt;</div><div class="line">&lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;</div><div class="line">&lt;value&gt;<span class="literal">false</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="初始化Hdfs"><a href="#初始化Hdfs" class="headerlink" title="初始化Hdfs"></a>初始化Hdfs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hdfs namenode -format</div></pre></td></tr></table></figure><h2 id="初始化Hdfs-1"><a href="#初始化Hdfs-1" class="headerlink" title="初始化Hdfs"></a>初始化Hdfs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hdfs namenode -format</div></pre></td></tr></table></figure><h2 id="启动Zookeeper并查看Zookeeper启动状态"><a href="#启动Zookeeper并查看Zookeeper启动状态" class="headerlink" title="启动Zookeeper并查看Zookeeper启动状态"></a>启动Zookeeper并查看Zookeeper启动状态</h2><p>查看状态，如果发现每个node当前状态标记为follower或者leader，那么测试通过<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">zkServer.sh start</div><div class="line">zkServer.sh status</div></pre></td></tr></table></figure></p><h2 id="启动Hadoop集群"><a href="#启动Hadoop集群" class="headerlink" title="启动Hadoop集群"></a>启动Hadoop集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">start-dfs.sh</div><div class="line">start-yarn.sh</div></pre></td></tr></table></figure><h2 id="进入Hadoop-集群Web控制台"><a href="#进入Hadoop-集群Web控制台" class="headerlink" title="进入Hadoop 集群Web控制台"></a>进入Hadoop 集群Web控制台</h2><p><a href="http://192.168.1.10:8088/" target="_blank" rel="external">http://192.168.1.10:8088/</a> #NameNode图形界面, 任务分配和任务进度信息的查询<br><a href="http://192.168.1.10:9870/" target="_blank" rel="external">http://192.168.1.10:9870/</a> #集群结点(Node Of Cluster)图形界面</p><h2 id="Yarn可用测试"><a href="#Yarn可用测试" class="headerlink" title="Yarn可用测试"></a>Yarn可用测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hdfs dfs -mkdir /user</div><div class="line">hdfs dfs -mkdir /user/hadoop</div><div class="line">hdfs dfs -mkdir input</div><div class="line">hdfs dfs -put /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/*.xml input</div><div class="line">hadoop jar /usr/<span class="built_in">local</span>/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.0.0.jar grep input output <span class="string">'dfs[a-z.]+'</span></div><div class="line">hdfs dfs -get output output</div><div class="line">cat output/*</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hadoop-集群服务器及节点规划&quot;&gt;&lt;a href=&quot;#Hadoop-集群服务器及节点规划&quot; class=&quot;headerlink&quot; title=&quot;Hadoop 集群服务器及节点规划&quot;&gt;&lt;/a&gt;Hadoop 集群服务器及节点规划&lt;/h2&gt;&lt;figure class
      
    
    </summary>
    
      <category term="Hadoop" scheme="http://yoursite.com/categories/Hadoop/"/>
    
    
      <category term="Hadoop" scheme="http://yoursite.com/tags/Hadoop/"/>
    
      <category term="大数据" scheme="http://yoursite.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 常用SQL诊断脚本</title>
    <link href="http://yoursite.com/2018/04/04/SQL/MySQL_SQL_2/"/>
    <id>http://yoursite.com/2018/04/04/SQL/MySQL_SQL_2/</id>
    <published>2018-04-04T15:15:11.791Z</published>
    <updated>2018-04-04T02:02:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看MySQL数据库中无显示主键的表"><a href="#查看MySQL数据库中无显示主键的表" class="headerlink" title="查看MySQL数据库中无显示主键的表"></a>查看MySQL数据库中无显示主键的表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">SELECT t.TABLE_SCHEMA, t.TABLE_NAME</div><div class="line">  FROM information_schema.TABLES t</div><div class="line">  LEFT JOIN information_schema.TABLE_CONSTRAINTS tc</div><div class="line">    ON tc.TABLE_SCHEMA = t.TABLE_SCHEMA</div><div class="line">   AND tc.TABLE_NAME = t.TABLE_NAME</div><div class="line">   AND tc.CONSTRAINT_TYPE = <span class="string">'PRIMARY KEY'</span></div><div class="line"> WHERE t.TABLE_TYPE = <span class="string">'BASE TABLE'</span></div><div class="line">   AND tc.CONSTRAINT_TYPE IS NULL</div><div class="line">   AND t.TABLE_SCHEMA NOT IN</div><div class="line">       (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>);</div></pre></td></tr></table></figure><h2 id="查看MySQL数据库中没有被使用的索引"><a href="#查看MySQL数据库中没有被使用的索引" class="headerlink" title="查看MySQL数据库中没有被使用的索引"></a>查看MySQL数据库中没有被使用的索引</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SELECT OBJECT_SCHEMA, OBJECT_NAME, INDEX_NAME</div><div class="line">  FROM performance_schema.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE</div><div class="line"> WHERE INDEX_NAME IS NOT NULL</div><div class="line">   AND INDEX_NAME != <span class="string">'PRIMARY'</span></div><div class="line">   AND COUNT_FETCH = 0</div><div class="line">   AND COUNT_READ = 0</div><div class="line">   AND OBJECT_SCHEMA NOT IN (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line"> ORDER BY OBJECT_SCHEMA, OBJECT_NAME;</div></pre></td></tr></table></figure><h2 id="查看MySQL数据库中存在外键约束的表"><a href="#查看MySQL数据库中存在外键约束的表" class="headerlink" title="查看MySQL数据库中存在外键约束的表"></a>查看MySQL数据库中存在外键约束的表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">SELECT c.TABLE_SCHEMA,</div><div class="line">       c.REFERENCED_TABLE_NAME,</div><div class="line">       c.REFERENCED_COLUMN_NAME,</div><div class="line">       c.TABLE_NAME,</div><div class="line">       c.COLUMN_NAME,</div><div class="line">       c.CONSTRAINT_NAME,</div><div class="line">       t.TABLE_COMMENT,</div><div class="line">       r.UPDATE_RULE,</div><div class="line">       r.DELETE_RULE</div><div class="line">  FROM information_schema.KEY_COLUMN_USAGE c</div><div class="line">  JOIN information_schema.TABLES t</div><div class="line">    ON t.TABLE_NAME = c.TABLE_NAME</div><div class="line">  JOIN information_schema.REFERENTIAL_CONSTRAINTS r</div><div class="line">    ON r.TABLE_NAME = c.TABLE_NAME</div><div class="line">   AND r.CONSTRAINT_NAME = c.CONSTRAINT_NAME</div><div class="line">   AND r.REFERENCED_TABLE_NAME = c.REFERENCED_TABLE_NAME</div><div class="line"> WHERE c.REFERENCED_TABLE_NAME IS NOT NULL;</div></pre></td></tr></table></figure><h2 id="查看MySQL数据库中引擎不是InnoDB的表"><a href="#查看MySQL数据库中引擎不是InnoDB的表" class="headerlink" title="查看MySQL数据库中引擎不是InnoDB的表"></a>查看MySQL数据库中引擎不是InnoDB的表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT CONCAT(<span class="string">'ALTER TABLE '</span>, TABLE_SCHEMA, <span class="string">'.'</span>, TABLE_NAME, <span class="string">' ENGINE = InnoDB;'</span>)</div><div class="line">  FROM information_schema.TABLES</div><div class="line"> WHERE TABLE_SCHEMA NOT IN</div><div class="line">      (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">  AND ENGINE != <span class="string">'InnoDB'</span>;</div></pre></td></tr></table></figure><h2 id="查看MySQL数据库中主键是复合主键的表"><a href="#查看MySQL数据库中主键是复合主键的表" class="headerlink" title="查看MySQL数据库中主键是复合主键的表"></a>查看MySQL数据库中主键是复合主键的表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SELECT TABLE_SCHEMA, TABLE_NAME,</div><div class="line">      GROUP_CONCAT(COLUMN_NAME ORDER BY SEQ_IN_INDEX SEPARATOR <span class="string">','</span>) cols,</div><div class="line">      MAX(SEQ_IN_INDEX) len</div><div class="line">  FROM information_schema.STATISTICS</div><div class="line"> WHERE INDEX_NAME = <span class="string">'PRIMARY'</span></div><div class="line">   AND TABLE_SCHEMA NOT IN</div><div class="line">      (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line"> GROUP BY TABLE_SCHEMA, TABLE_NAME</div><div class="line">HAVING len &gt; 1;</div></pre></td></tr></table></figure><h2 id="查找MySQL数据库中重复索引前缀的索引"><a href="#查找MySQL数据库中重复索引前缀的索引" class="headerlink" title="查找MySQL数据库中重复索引前缀的索引"></a>查找MySQL数据库中重复索引前缀的索引</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">SELECT a.TABLE_SCHEMA, a.TABLE_NAME, a.INDEX_NAME, a.cols, b.INDEX_NAME, b.cols</div><div class="line">  FROM (SELECT TABLE_SCHEMA, TABLE_NAME, INDEX_NAME,</div><div class="line">              CONCAT(<span class="string">'| '</span>, GROUP_CONCAT(COLUMN_NAME ORDER BY SEQ_IN_INDEX SEPARATOR <span class="string">' | '</span>), <span class="string">' |'</span>) AS cols</div><div class="line">          FROM information_schema.STATISTICS</div><div class="line">         WHERE TABLE_SCHEMA NOT IN  (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">           AND INDEX_NAME != <span class="string">'PRIMARY'</span></div><div class="line">         GROUP BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME) a</div><div class="line"> INNER JOIN (SELECT TABLE_SCHEMA, TABLE_NAME, INDEX_NAME,</div><div class="line">                    CONCAT(<span class="string">'| '</span>, GROUP_CONCAT(COLUMN_NAME ORDER BY SEQ_IN_INDEX SEPARATOR <span class="string">' | '</span>), <span class="string">' |'</span>) AS cols</div><div class="line">               FROM information_schema.STATISTICS</div><div class="line">              WHERE TABLE_SCHEMA NOT IN  (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">                AND INDEX_NAME != <span class="string">'PRIMARY'</span></div><div class="line">              GROUP BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME) b</div><div class="line">    ON a.TABLE_NAME = b.TABLE_NAME</div><div class="line">   AND a.TABLE_SCHEMA = b.TABLE_SCHEMA</div><div class="line">   AND a.cols LIKE CONCAT(b.cols, <span class="string">'%'</span>)</div><div class="line">   AND a.INDEX_NAME != b.INDEX_NAME;</div></pre></td></tr></table></figure><h2 id="查找MySQL数据库中低区分度索引（区分度小于0-1）"><a href="#查找MySQL数据库中低区分度索引（区分度小于0-1）" class="headerlink" title="查找MySQL数据库中低区分度索引（区分度小于0.1）"></a>查找MySQL数据库中低区分度索引（区分度小于0.1）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">SELECT p.TABLE_SCHEMA, p.TABLE_NAME, c.INDEX_NAME, c.car, p.car total</div><div class="line">  FROM (SELECT TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, MAX(CARDINALITY) car</div><div class="line">          FROM information_schema.STATISTICS</div><div class="line">         WHERE INDEX_NAME != <span class="string">'PRIMARY'</span></div><div class="line">           AND TABLE_SCHEMA NOT IN  (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">         GROUP BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME) c</div><div class="line"> INNER JOIN (SELECT TABLE_SCHEMA, TABLE_NAME, MAX(CARDINALITY) car</div><div class="line">               from information_schema.STATISTICS</div><div class="line">              WHERE INDEX_NAME = <span class="string">'PRIMARY'</span></div><div class="line">                AND TABLE_SCHEMA NOT IN  (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">              GROUP BY TABLE_SCHEMA, TABLE_NAME) p</div><div class="line">    ON c.TABLE_NAME = p.TABLE_NAME</div><div class="line">   AND c.TABLE_SCHEMA = p.TABLE_SCHEMA</div><div class="line"> WHERE p.car &gt; 0</div><div class="line">   AND c.car / p.car &lt; 0.1</div><div class="line"> ORDER BY c.car / p.car;</div></pre></td></tr></table></figure><h2 id="查找MySQL数据库主键不为自增主键的表"><a href="#查找MySQL数据库主键不为自增主键的表" class="headerlink" title="查找MySQL数据库主键不为自增主键的表"></a>查找MySQL数据库主键不为自增主键的表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">SELECT TABLE_SCHEMA, TABLE_NAME</div><div class="line">  FROM information_schema.TABLES</div><div class="line"> WHERE TABLE_SCHEMA NOT IN (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">   AND (TABLE_SCHEMA,TABLE_NAME) NOT IN </div><div class="line">       (SELECT TABLE_SCHEMA, TABLE_NAME</div><div class="line">          FROM information_schema.COLUMNS</div><div class="line">         WHERE TABLE_SCHEMA NOT IN (<span class="string">'sys'</span>, <span class="string">'mysql'</span>, <span class="string">'performance_schema'</span>, <span class="string">'information_schema'</span>, <span class="string">'test'</span>)</div><div class="line">           AND IS_NULLABLE = <span class="string">'NO'</span></div><div class="line">           AND COLUMN_TYPE LIKE <span class="string">'%int%'</span></div><div class="line">           AND COLUMN_KEY = <span class="string">'PRI'</span></div><div class="line">           AND EXTRA = <span class="string">'auto_increment'</span>);</div></pre></td></tr></table></figure><h2 id="查看数据库中的锁请求"><a href="#查看数据库中的锁请求" class="headerlink" title="查看数据库中的锁请求"></a>查看数据库中的锁请求</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">SELECT r.TRX_ISOLATION_LEVEL,</div><div class="line">       r.TRX_ID                              WAITING_TRX_ID,</div><div class="line">       r.TRX_MYSQL_THREAD_ID  WAITING_TRX_THREAD,</div><div class="line">       r.TRX_STATE                       WAITING_TRX_STATE,</div><div class="line">       lr.LOCK_MODE                    WAITING_TRX_LOCK_MODE,</div><div class="line">       lr.LOCK_TYPE                     WAITING_TRX_LOCK_TYPE,</div><div class="line">       lr.LOCK_TABLE                   WAITING_TRX_LOCK_TABLE,</div><div class="line">       lr.LOCK_INDEX                    WAITING_TRX_LOCK_INDEX,</div><div class="line">       r.TRX_QUERY                      WAITING_TRX_QUERY,</div><div class="line">       b.TRX_ID                              BLOCKING_TRX_ID,</div><div class="line">       b.TRX_MYSQL_THREAD_ID  BLOCKING_TRX_THREAD,</div><div class="line">       b.TRX_STATE                       BLOCKING_TRX_STATE,</div><div class="line">       lb.LOCK_MODE                    BLOCKING_TRX_LOCK_MODE,</div><div class="line">       lb.LOCK_TYPE                     BLOCKING_TRX_LOCK_TYPE,</div><div class="line">       lb.LOCK_TABLE                   BLOCKING_TRX_LOCK_TABLE,</div><div class="line">       lb.LOCK_INDEX                    BLOCKING_TRX_LOCK_INDEX,</div><div class="line">       b.TRX_QUERY                     BLOCKING_QUERY</div><div class="line">  FROM information_schema.INNODB_LOCK_WAITS w</div><div class="line"> INNER JOIN INFORMATION_SCHEMA.INNODB_TRX b</div><div class="line">    ON b.TRX_ID = W.BLOCKING_TRX_ID</div><div class="line"> INNER JOIN information_schema.INNODB_TRX R</div><div class="line">    ON r.TRX_ID = W.REQUESTING_TRX_ID</div><div class="line"> INNER JOIN information_schema.INNODB_LOCKS lb</div><div class="line">    ON lb.LOCK_TRX_ID = W.BLOCKING_TRX_ID</div><div class="line"> INNER JOIN information_schema.INNODB_LOCKS lr</div><div class="line">    ON lr.LOCK_TRX_ID = W.REQUESTING_TRX_ID;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看MySQL数据库中无显示主键的表&quot;&gt;&lt;a href=&quot;#查看MySQL数据库中无显示主键的表&quot; class=&quot;headerlink&quot; title=&quot;查看MySQL数据库中无显示主键的表&quot;&gt;&lt;/a&gt;查看MySQL数据库中无显示主键的表&lt;/h2&gt;&lt;figure c
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>由一条MySQL SQL优化案例的引发索引调优、SQL等价改写及业务实现的反思</title>
    <link href="http://yoursite.com/2018/04/04/SQL/MySQL_SQL_1/"/>
    <id>http://yoursite.com/2018/04/04/SQL/MySQL_SQL_1/</id>
    <published>2018-04-04T14:26:55.089Z</published>
    <updated>2018-04-04T15:13:02.432Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/SQL/MySQL_SQL_3_1.png" alt="MySQL 死锁"><br>线上MySQL为5.1版本，频繁引发了update语句与select语句的死锁，死锁引发的原因，暂且不论，主要来分析如何优化SQL减轻死锁的发生概率。SQL执行时间13s,SQL文本如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">SELECT ....</div><div class="line">  FROM weituoanjian WA</div><div class="line">  LEFT JOIN phoneinfo p</div><div class="line">    ON wa.daoruId = p.drId</div><div class="line">   AND wa.subId = p.subId</div><div class="line">  LEFT JOIN employee e</div><div class="line">    ON employeeId = beifenpeizhe</div><div class="line">  LEFT JOIN mst_tuianleibie</div><div class="line">    ON WA.TuiAnCode = mst_tuianleibie.TuiAnCode</div><div class="line">  LEFT JOIN kehutel</div><div class="line">    ON WA.keHuCode = kehutel.keHuId</div><div class="line">  LEFT JOIN mst_anjianstatus</div><div class="line">    ON WA.AnJianStatusCode = mst_anjianstatus.AnJianStatusCode</div><div class="line">  LEFT OUTER JOIN mst_anjianstatus2</div><div class="line">    ON WA.taCode = mst_anjianstatus2.TAStatusCode</div><div class="line">  LEFT JOIN anjianpici</div><div class="line">    ON anjianpicicode = wa.pcCode</div><div class="line"> WHERE IFNULL(historyFlag, 0) &lt;&gt; 1</div><div class="line">   AND (REPLACE(ChiKaRenXingMing, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        ckrpinyin LIKE <span class="string">'%13335192949%'</span> OR ckrszm LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        ZhengJianHaoMa LIKE <span class="string">'%13335192949%'</span> OR KaHao LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        ZhangHao LIKE <span class="string">'%13335192949%'</span> OR email3 LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        email2 LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(bqContent, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(BeiZhu1, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(BeiZhu2, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(DanWeiMingCheng, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        pNo LIKE <span class="string">'%13335192949%'</span> OR pName LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        (wa.daoruId, wa.subId) IN</div><div class="line">        (SELECT DISTINCT drId, subId</div><div class="line">           FROM bgbinfo</div><div class="line">          WHERE bgInfo LIKE <span class="string">'%13335192949%'</span>) OR</div><div class="line">        ZhengJianHaoMa IN</div><div class="line">        (SELECT DISTINCT ShenFenZhengID</div><div class="line">           FROM inputlog</div><div class="line">          WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span>))</div><div class="line"> ORDER BY ZhengJianHaoMa, daoruId, subId LIMIT 0, 40;</div></pre></td></tr></table></figure></p><p>一眼看来，此SQL并没有很好的过滤条件字段，无法通过where 谓词的索引来优化此SQL，只希望表连接还有优化的余地，来解决这次死锁的故障问题，查看SQL执行计划如下，表之间的关联都用上了索引，也无法提升，看来在无法通过索引优化来解决问题。执行计划如下：<br><img src="/images/SQL/MySQL_SQL_3_2.png" alt="MySQL 执行计划"></p><p>对SQL分解拆分分析，第一步：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">... WHERE IFNULL(historyFlag, 0) &lt;&gt; 1</div><div class="line">   AND (REPLACE(ChiKaRenXingMing, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        ckrpinyin LIKE <span class="string">'%13335192949%'</span> OR ckrszm LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        ZhengJianHaoMa LIKE <span class="string">'%13335192949%'</span> OR KaHao LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        ZhangHao LIKE <span class="string">'%13335192949%'</span> OR email3 LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        email2 LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(bqContent, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(BeiZhu1, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(BeiZhu2, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        REPLACE(DanWeiMingCheng, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">        pNo LIKE <span class="string">'%13335192949%'</span> OR pName LIKE <span class="string">'%13335192949%'</span>)</div></pre></td></tr></table></figure></p><p>执行这一段，发现SQL在0.5s之内就能返回结果，执行计划也无明显的可优化点，并且在不改动业务实现的情况下，继续优化的代价太高，所以不在继续深入优化。</p><p>第二步：分析子查询对于SQL执行计划的影响，并改写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">... (wa.daoruId, wa.subId) IN</div><div class="line">        (SELECT DISTINCT drId, subId</div><div class="line">           FROM bgbinfo</div><div class="line">          WHERE bgInfo LIKE <span class="string">'%13335192949%'</span>) ...</div><div class="line"></div><div class="line">... ZhengJianHaoMa IN</div><div class="line">        (SELECT DISTINCT ShenFenZhengID</div><div class="line">           FROM inputlog</div><div class="line">          WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span>) ...</div></pre></td></tr></table></figure></p><p>改写为内连接查询<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">...  INNER JOIN (SELECT drId, subId</div><div class="line">                      FROM bgbinfo</div><div class="line">                     WHERE bgInfo LIKE <span class="string">'%13335192949%'</span></div><div class="line">                     GROUP BY drId, subId) m</div><div class="line">            ON m.drId = wa.daoruId</div><div class="line">           AND m.subId = wa.subId ...</div><div class="line"></div><div class="line">... INNER JOIN (SELECT ShenFenZhengID</div><div class="line">                      FROM inputlog</div><div class="line">                     WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span></div><div class="line">                     GROUP BY ShenFenZhengID) n</div><div class="line">            ON wa.ZhengJianHaoMa = n.ShenFenZhengID ...</div></pre></td></tr></table></figure></p><p>第一段0.6s，第二段6s，执行计划分别如下：<br><img src="/images/SQL/MySQL_SQL_3_3.png" alt="MySQL 执行计划"><br><img src="/images/SQL/MySQL_SQL_3_4.png" alt="MySQL 执行计划"><br>对wa表ZhengJianHaoMa字段加索引后，第二段更新执行计划如下：<br><img src="/images/SQL/MySQL_SQL_3_5.png" alt="MySQL 执行计划"></p><p>整句SQL改写和索引优化基本完成，SQL执行时间由原来的13s提升到7s，执行时间明显减短；剩下的性能瓶颈主要是来inputlog整张表ShenFenZhengID的去重，表数据量150W。SQL无法优化再优化下去，只能通过改变业务的实现方式来优化，由于表inputText是不更新的，所以通过凌晨定时任务来优化对整个表的数据统计。再和当天的数据做合并，这样就大大减轻了频繁调用此SQL全表扫描排序对服务器负载、执行时间和加锁时间，同时也解决了随着数据量的增加对系统的负载影响，后端程序代码也不需做大改动。<br>定时任务统计当天之前的数据，并写入表中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">INERT INTO bgbinfo_day </div><div class="line">SELECT drId, subId</div><div class="line">  FROM bgbinfo</div><div class="line"> WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span></div><div class="line">   AND InputDate &lt; DATE_FORMAT(CURRENT_DATE, <span class="string">'%Y-%m-%d 00:00:00'</span>)</div><div class="line"> GROUP BY drId, subId;</div><div class="line"></div><div class="line">INERT INTO inputlog_day </div><div class="line">SELECT ShenFenZhengID</div><div class="line">  FROM inputlog</div><div class="line"> WHERE bgInfo LIKE <span class="string">'%13335192949%'</span></div><div class="line">   AND InputDate &lt; DATE_FORMAT(CURRENT_DATE, <span class="string">'%Y-%m-%d 00:00:00'</span>)</div><div class="line"> GROUP BY ShenFenZhengID;</div></pre></td></tr></table></figure></p><p>线上并发调用时再将统计数结果与当天的数据合并<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">SELECT drId, subId from bgbinfo_day</div><div class="line">UNION</div><div class="line">SELECT drId, subId</div><div class="line">  FROM bgbinfo</div><div class="line"> WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span></div><div class="line">   AND InputDate &gt;= DATE_FORMAT(CURRENT_DATE, <span class="string">'%Y-%m-%d 00:00:00'</span>)</div><div class="line"> GROUP BY drId, subId;</div><div class="line"></div><div class="line">SELECT ShenFenZhengID from inputlog_day</div><div class="line">UNION</div><div class="line">SELECT ShenFenZhengID</div><div class="line">  FROM inputlog</div><div class="line"> WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span></div><div class="line">   AND InputDate &gt;= DATE_FORMAT(CURRENT_DATE, <span class="string">'%Y-%m-%d 00:00:00'</span>)</div><div class="line"> GROUP BY ShenFenZhengID;</div></pre></td></tr></table></figure></p><p>最终改写后的SQL为0.8s，性能提升18倍，死锁的问题得意解决，改写也不业务的实现影响，只是在数据库里增加了两个临时表。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">  FROM (SELECT ...</div><div class="line">          FROM weituoanjian WA</div><div class="line">          LEFT JOIN phoneinfo p</div><div class="line">            ON wa.daoruId = p.drId</div><div class="line">           AND wa.subId = p.subId</div><div class="line">          LEFT JOIN employee e</div><div class="line">            ON employeeId = beifenpeizhe</div><div class="line">          LEFT JOIN mst_tuianleibie</div><div class="line">            ON WA.TuiAnCode = mst_tuianleibie.TuiAnCode</div><div class="line">          LEFT JOIN kehutel</div><div class="line">            ON WA.keHuCode = kehutel.keHuId</div><div class="line">          LEFT JOIN mst_anjianstatus</div><div class="line">            ON WA.AnJianStatusCode = mst_anjianstatus.AnJianStatusCode</div><div class="line">          LEFT OUTER JOIN mst_anjianstatus2</div><div class="line">            ON WA.taCode = mst_anjianstatus2.TAStatusCode</div><div class="line">          LEFT JOIN anjianpici</div><div class="line">            ON anjianpicicode = wa.pcCode</div><div class="line">         WHERE (historyFlag &gt; 1 or historyFlag &lt; 1 or historyFlag is null)</div><div class="line">           AND (REPLACE(ChiKaRenXingMing, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               ckrpinyin LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               ckrszm LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               ZhengJianHaoMa LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               KaHao LIKE <span class="string">'%13335192949%'</span> OR ZhangHao LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               email3 LIKE <span class="string">'%13335192949%'</span> OR email2 LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               REPLACE(bqContent, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               REPLACE(BeiZhu1, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               REPLACE(BeiZhu2, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               REPLACE(DanWeiMingCheng, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span> OR</div><div class="line">               pNo LIKE <span class="string">'%13335192949%'</span> OR pName LIKE <span class="string">'%13335192949%'</span>)</div><div class="line">        UNION</div><div class="line">        SELECT ...</div><div class="line">          FROM weituoanjian WA</div><div class="line">          LEFT JOIN phoneinfo p</div><div class="line">            ON wa.daoruId = p.drId</div><div class="line">           AND wa.subId = p.subId</div><div class="line">          LEFT JOIN employee e</div><div class="line">            ON employeeId = beifenpeizhe</div><div class="line">          LEFT JOIN mst_tuianleibie</div><div class="line">            ON WA.TuiAnCode = mst_tuianleibie.TuiAnCode</div><div class="line">          LEFT JOIN kehutel</div><div class="line">            ON WA.keHuCode = kehutel.keHuId</div><div class="line">          LEFT JOIN mst_anjianstatus</div><div class="line">            ON WA.AnJianStatusCode = mst_anjianstatus.AnJianStatusCode</div><div class="line">          LEFT OUTER JOIN mst_anjianstatus2</div><div class="line">            ON WA.taCode = mst_anjianstatus2.TAStatusCode</div><div class="line">          LEFT JOIN anjianpici</div><div class="line">            ON anjianpicicode = wa.pcCode</div><div class="line">         INNER JOIN (SELECT drId, subId</div><div class="line">                      from bgbinfo_day</div><div class="line">                    UNION</div><div class="line">                    SELECT drId, subId</div><div class="line">                      FROM bgbinfo</div><div class="line">                     WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span></div><div class="line">                       AND InputDate &gt;=</div><div class="line">                           DATE_FORMAT(CURRENT_DATE, <span class="string">'%Y-%m-%d 00:00:00'</span>)</div><div class="line">                     GROUP BY drId, subId) m</div><div class="line">            ON m.drId = wa.daoruId</div><div class="line">           AND m.subId = wa.subId</div><div class="line">         WHERE (historyFlag &gt; 1 or historyFlag &lt; 1 or historyFlag is null)</div><div class="line">        UNION</div><div class="line">        SELECT ...</div><div class="line">          FROM weituoanjian WA</div><div class="line">          LEFT JOIN phoneinfo p</div><div class="line">            ON wa.daoruId = p.drId</div><div class="line">           AND wa.subId = p.subId</div><div class="line">          LEFT JOIN employee e</div><div class="line">            ON employeeId = beifenpeizhe</div><div class="line">          LEFT JOIN mst_tuianleibie</div><div class="line">            ON WA.TuiAnCode = mst_tuianleibie.TuiAnCode</div><div class="line">          LEFT JOIN kehutel</div><div class="line">            ON WA.keHuCode = kehutel.keHuId</div><div class="line">          LEFT JOIN mst_anjianstatus</div><div class="line">            ON WA.AnJianStatusCode = mst_anjianstatus.AnJianStatusCode</div><div class="line">          LEFT OUTER JOIN mst_anjianstatus2</div><div class="line">            ON WA.taCode = mst_anjianstatus2.TAStatusCode</div><div class="line">          LEFT JOIN anjianpici</div><div class="line">            ON anjianpicicode = wa.pcCode</div><div class="line">         INNER JOIN (SELECT ShenFenZhengID</div><div class="line">                      from inputlog_day</div><div class="line">                    UNION</div><div class="line">                    SELECT ShenFenZhengID</div><div class="line">                      FROM inputlog</div><div class="line">                     WHERE REPLACE(inputText, <span class="string">' '</span>, <span class="string">''</span>) LIKE <span class="string">'%13335192949%'</span></div><div class="line">                       AND InputDate &gt;=</div><div class="line">                           DATE_FORMAT(CURRENT_DATE, <span class="string">'%Y-%m-%d 00:00:00'</span>)</div><div class="line">                     GROUP BY ShenFenZhengID) n</div><div class="line">            ON wa.ZhengJianHaoMa = n.ShenFenZhengID</div><div class="line">         WHERE (historyFlag &gt; 1 or historyFlag &lt; 1 or historyFlag is null)) t</div><div class="line"> ORDER BY t.ZhengJianHaoMa, t.daoruId, t.subId LIMIT 0, 40;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/SQL/MySQL_SQL_3_1.png&quot; alt=&quot;MySQL 死锁&quot;&gt;&lt;br&gt;线上MySQL为5.1版本，频繁引发了update语句与select语句的死锁，死锁引发的原因，暂且不论，主要来分析如何优化SQL减轻死锁的发生概率。SQ
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>索引设计原则、使用场景及失效场景</title>
    <link href="http://yoursite.com/2018/04/03/SQL/DB_INDEX_1/"/>
    <id>http://yoursite.com/2018/04/03/SQL/DB_INDEX_1/</id>
    <published>2018-04-03T13:28:41.985Z</published>
    <updated>2018-04-10T14:34:57.660Z</updated>
    
    <content type="html"><![CDATA[<p>索引对查询的速度有着至关重要的影响，理解索引也是进行数据库性能调优的起点。首先需要明白为什么索引会增加检索效率，DB在执行一条SQL语句的时候，默认的方式是根据搜索条件进行全表扫描，遇到匹配条件的就加入搜索结果集合。如果我们对某一字段增加索引，数据库基于costs优化器，根据系统收集的统计信息，生成执行计划，查询时就会通过索引列表中一次定位到特定值的行数，大大减少遍历匹配的行数，所以能明显增加查询的速度。</p><h2 id="索引优点与缺点"><a href="#索引优点与缺点" class="headerlink" title="索引优点与缺点"></a>索引优点与缺点</h2><p>使用索引的优点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1、加速表和表之间的关接，特别是在实现数据的参考完整性方面特别有意义。</div><div class="line">2、可以大大加快数据的检索速度，这也是创建索引的最主要的原因。</div><div class="line">3、通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。</div><div class="line">4、在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。</div><div class="line">5、通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。</div></pre></td></tr></table></figure></p><p>索引存在的缺陷<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1、数据内容的变更（增、删、改）都需要修订索引，索引存在而外的维护成本</div><div class="line">2、创建、维护索引要耗费时间和系统资源，维护时间随着数据量的增加而增加。</div><div class="line">3、查找翻阅索引系统需要消耗时间，索引存在而外的访问成本。</div><div class="line">4、索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。</div><div class="line">5、数据的备份和恢复时间，会因为过多的索引消耗系统更多的维护时间。</div></pre></td></tr></table></figure></p><h2 id="如何建立理想的索引"><a href="#如何建立理想的索引" class="headerlink" title="如何建立理想的索引"></a>如何建立理想的索引</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SQL查询频率</div><div class="line">过滤谓词选择性（cardinality/selectivity）</div><div class="line">索引长度</div><div class="line">覆盖字段</div><div class="line">索引排序</div></pre></td></tr></table></figure><h2 id="索引设计和使用原则"><a href="#索引设计和使用原则" class="headerlink" title="索引设计和使用原则"></a>索引设计和使用原则</h2><p>在进行索引设计和索引优化时，请参考如下的索引使用原则：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">1、通过创建唯一性索引，保证数据库表中数据的唯一性。</div><div class="line">2、对任何将要用于连接表的谓词连接列(on)创建索引</div><div class="line">3、对预计会频繁运行的SQL中WHERE子句引用的谓词过滤列创建索引</div><div class="line">4、对用于分组、分组等操作（进行GROUP BY或ORDER BY操作）的谓词分组、排序列创建索引</div><div class="line">5、过滤效果（选择性要高）要好（索引列的基数要大），不宜对status、sex等低基数列，使用单列索引检索数据，而尽可能与其他过滤条件建立复合索引，增加数据选择性</div><div class="line">6、对于那些在查询中很少使用或频繁更新的列，不宜使用索引</div><div class="line">7、字段顺序要佳，字段顺序对复合索引的效率有至关重要的作用，选择性高的的字段需要更靠前</div><div class="line">8、索引长度尽量小，对于定义为text，blob数据类型的大字段列不宜创建索引，而尽可能考虑前缀索引</div><div class="line">9、不宜过度索引，建立多个SQL能同时使用的高效复合索引，而不是多个索引</div></pre></td></tr></table></figure></p><h2 id="索引失效场景"><a href="#索引失效场景" class="headerlink" title="索引失效场景"></a>索引失效场景</h2><p>以a,b 两列复合索引idx_a_b(a,b)为例说明</p><h3 id="索引全失效场景"><a href="#索引全失效场景" class="headerlink" title="索引全失效场景"></a>索引全失效场景</h3><p>idx_a_b(a,b) 索引完全不被SQL使用</p><h4 id="谓词列或关联谓词列使用了普通或函数运算"><a href="#谓词列或关联谓词列使用了普通或函数运算" class="headerlink" title="谓词列或关联谓词列使用了普通或函数运算"></a>谓词列或关联谓词列使用了普通或函数运算</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE DATE_FORMAT(a,<span class="string">'%Y%m%d'</span>) = <span class="string">'20180408'</span>;</div><div class="line">SELECT * FROM t WHERE a + 2 = 10;</div></pre></td></tr></table></figure><h4 id="谓词上的索引列或关联谓词列数据类型出现隐式转换（包括不同数据类型、字符集的转换等【字节长度不影响】）"><a href="#谓词上的索引列或关联谓词列数据类型出现隐式转换（包括不同数据类型、字符集的转换等【字节长度不影响】）" class="headerlink" title="谓词上的索引列或关联谓词列数据类型出现隐式转换（包括不同数据类型、字符集的转换等【字节长度不影响】）"></a>谓词上的索引列或关联谓词列数据类型出现隐式转换（包括不同数据类型、字符集的转换等【字节长度不影响】）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a、字符类型转换（int/varchar、varchar/datetime、varchar/varbinary等数据类型的转换）</div><div class="line">b、字符集转换（utf8与utf8mb4字符集等）</div><div class="line">c、同字符集排序规则不同（utf8_general_ci与utf8_bin等）</div></pre></td></tr></table></figure><h4 id="谓词上使用了负向查询（not-not-in-not-like-lt-gt-gt-lt-）不会使用索引"><a href="#谓词上使用了负向查询（not-not-in-not-like-lt-gt-gt-lt-）不会使用索引" class="headerlink" title="谓词上使用了负向查询（not, not in, not like, &lt;&gt;, != , !&gt;, !&lt; ）不会使用索引"></a>谓词上使用了负向查询（not, not in, not like, &lt;&gt;, != , !&gt;, !&lt; ）不会使用索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a != 8;</div><div class="line">SELECT * FROM t WHERE a NOT IN (1,2,3);</div></pre></td></tr></table></figure><h4 id="以-开头的like查询或者正则匹配的regexp模糊查询"><a href="#以-开头的like查询或者正则匹配的regexp模糊查询" class="headerlink" title="以%开头的like查询或者正则匹配的regexp模糊查询"></a>以%开头的like查询或者正则匹配的regexp模糊查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a LIKE <span class="string">'%c'</span>;</div><div class="line">SELECT * FROM t WHERE a REGEXP <span class="string">'...'</span>;</div></pre></td></tr></table></figure><h4 id="谓词上的索引列上对null运算（is-null-is-not-null）"><a href="#谓词上的索引列上对null运算（is-null-is-not-null）" class="headerlink" title="谓词上的索引列上对null运算（is null,is not null）"></a>谓词上的索引列上对null运算（is null,is not null）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM WHERE a IS NULL;</div><div class="line">SELECT * FROM WHERE a IS NOT NULL;</div></pre></td></tr></table></figure><h4 id="子查询使用了not-in导致关联谓词列索引失效"><a href="#子查询使用了not-in导致关联谓词列索引失效" class="headerlink" title="子查询使用了not in导致关联谓词列索引失效"></a>子查询使用了not in导致关联谓词列索引失效</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a.id NOT IN (SELECT b.id FROM b);</div></pre></td></tr></table></figure><h4 id="检索小表"><a href="#检索小表" class="headerlink" title="检索小表"></a>检索小表</h4><h4 id="高水位、表空间碎片过多、统计信息错误及优化器缺陷等，导致索引不可用或低效"><a href="#高水位、表空间碎片过多、统计信息错误及优化器缺陷等，导致索引不可用或低效" class="headerlink" title="高水位、表空间碎片过多、统计信息错误及优化器缺陷等，导致索引不可用或低效"></a>高水位、表空间碎片过多、统计信息错误及优化器缺陷等，导致索引不可用或低效</h4><h4 id="低基数的查询过滤列（基于CBO的优化器）数据检索或询的数量是大表的大部分，30-左右（值不确定、以计算代价为准），导致索引失效"><a href="#低基数的查询过滤列（基于CBO的优化器）数据检索或询的数量是大表的大部分，30-左右（值不确定、以计算代价为准），导致索引失效" class="headerlink" title="低基数的查询过滤列（基于CBO的优化器）数据检索或询的数量是大表的大部分，30%左右（值不确定、以计算代价为准），导致索引失效"></a>低基数的查询过滤列（基于CBO的优化器）数据检索或询的数量是大表的大部分，30%左右（值不确定、以计算代价为准），导致索引失效</h4><h3 id="索引部分失效场景"><a href="#索引部分失效场景" class="headerlink" title="索引部分失效场景"></a>索引部分失效场景</h3><p>复合索引idx_a_b_c，b字段或c字段索引失效的情况</p><h4 id="复合索引中，以（-gt-、-lt-、-lt-）的范围查询导致索引低效（不含in-、between-and-、-gt-lt-、-gt-lt-）"><a href="#复合索引中，以（-gt-、-lt-、-lt-）的范围查询导致索引低效（不含in-、between-and-、-gt-lt-、-gt-lt-）" class="headerlink" title="复合索引中，以（&gt; 、&lt;、&lt;=）的范围查询导致索引低效（不含in 、between and 、&gt;= &lt;= 、&gt;= &lt;）"></a>复合索引中，以（&gt; 、&lt;、&lt;=）的范围查询导致索引低效（不含in 、between and 、&gt;= &lt;= 、&gt;= &lt;）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a &gt; 1 AND b &gt;= 1;</div><div class="line">SELECT * FROM t WHERE a &lt;= 1 AND b &gt;= 1;</div></pre></td></tr></table></figure><h4 id="复合索引中，以or为关键词的范围查询导致索引失效"><a href="#复合索引中，以or为关键词的范围查询导致索引失效" class="headerlink" title="复合索引中，以or为关键词的范围查询导致索引失效"></a>复合索引中，以or为关键词的范围查询导致索引失效</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a = 1 AND (b = 1 OR c = 1);</div></pre></td></tr></table></figure><h4 id="复合索引中，范围检索导致之后的分组、排序-GROUP-BY-ORDER-BY-列索引失效"><a href="#复合索引中，范围检索导致之后的分组、排序-GROUP-BY-ORDER-BY-列索引失效" class="headerlink" title="复合索引中，范围检索导致之后的分组、排序 GROUP BY/ORDER BY 列索引失效"></a>复合索引中，范围检索导致之后的分组、排序 GROUP BY/ORDER BY 列索引失效</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a &gt;= 1 GROUP BY b;</div><div class="line">SELECT * FROM t WHERE a &gt;= 1 ORDER BY b;</div></pre></td></tr></table></figure><h4 id="在非连续的索引键部分上做-GROUP-BY-ORDER-BY-分组或排序，无法利用索引来实现GROUP-BY-ORDER-BY的优化"><a href="#在非连续的索引键部分上做-GROUP-BY-ORDER-BY-分组或排序，无法利用索引来实现GROUP-BY-ORDER-BY的优化" class="headerlink" title="在非连续的索引键部分上做 GROUP BY/ORDER BY 分组或排序，无法利用索引来实现GROUP BY/ORDER BY的优化"></a>在非连续的索引键部分上做 GROUP BY/ORDER BY 分组或排序，无法利用索引来实现GROUP BY/ORDER BY的优化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t WHERE a IN (1,2,3) GROUP BY b;</div><div class="line">SELECT * FROM t WHERE a IN (1,2,3) ORDER BY b;</div></pre></td></tr></table></figure><h4 id="如果在-WHERE-和-ORDER-BY-的栏位上应用表达式-函数-时，则无法利用索引来实现GROUP-BY-ORDER-BY的优化"><a href="#如果在-WHERE-和-ORDER-BY-的栏位上应用表达式-函数-时，则无法利用索引来实现GROUP-BY-ORDER-BY的优化" class="headerlink" title="如果在 WHERE 和 ORDER BY 的栏位上应用表达式(函数)时，则无法利用索引来实现GROUP BY/ORDER BY的优化"></a>如果在 WHERE 和 ORDER BY 的栏位上应用表达式(函数)时，则无法利用索引来实现GROUP BY/ORDER BY的优化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM WHERE a IN (1,2,3) GROUP BY DATE_FORMAT(b,<span class="string">'%Y%m%d'</span>);</div></pre></td></tr></table></figure><h4 id="分组后，对不同字段排序，导致排序字段索引不可用"><a href="#分组后，对不同字段排序，导致排序字段索引不可用" class="headerlink" title="分组后，对不同字段排序，导致排序字段索引不可用"></a>分组后，对不同字段排序，导致排序字段索引不可用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t GROUP BY a ORDER BY b;</div></pre></td></tr></table></figure><p>更具体的索引失效场景请参考如下表格：<br><img src="/images/SQL/INDEX_invalid.png" alt="索引失效场景"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;索引对查询的速度有着至关重要的影响，理解索引也是进行数据库性能调优的起点。首先需要明白为什么索引会增加检索效率，DB在执行一条SQL语句的时候，默认的方式是根据搜索条件进行全表扫描，遇到匹配条件的就加入搜索结果集合。如果我们对某一字段增加索引，数据库基于costs优化器，根
      
    
    </summary>
    
      <category term="SQL" scheme="http://yoursite.com/categories/SQL/"/>
    
    
      <category term="SQL 优化" scheme="http://yoursite.com/tags/SQL-%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL mysqldump 和 innobackupex 物理备份脚本</title>
    <link href="http://yoursite.com/2018/04/03/MySQL/MySQL_Backup/"/>
    <id>http://yoursite.com/2018/04/03/MySQL/MySQL_Backup/</id>
    <published>2018-04-03T12:38:11.881Z</published>
    <updated>2018-04-03T13:00:29.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Xtrabackup-备份脚本"><a href="#Xtrabackup-备份脚本" class="headerlink" title="Xtrabackup 备份脚本"></a>Xtrabackup 备份脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#----------------------------------</span></div><div class="line"><span class="comment">#User -------------MySQL备份用户</span></div><div class="line"><span class="comment">#Passwd -----------MySQL备份密码</span></div><div class="line"><span class="comment">#Port -------------MySQL备份</span></div><div class="line"><span class="comment">#BackupDir --------备份存放目录</span></div><div class="line"><span class="comment">#Weekly -----------全备份时间，以星期为时间单位</span></div><div class="line"><span class="comment">#Mycnf ------------MySQL参数位置路径</span></div><div class="line"><span class="comment"># ---------------------------------</span></div><div class="line"></div><div class="line">User=</div><div class="line">Passwd=</div><div class="line">Port=</div><div class="line">BackupDir=/data/backup</div><div class="line">Weekly=</div><div class="line">Mycnf=/etc/my.cnf</div><div class="line">Xtrabackup=/usr/bin/innobackupex</div><div class="line">Next=$(expr <span class="string">"<span class="variable">$Weekly</span>"</span> + 1)</div><div class="line">Today=`date +%Y-%m-%d`</div><div class="line">Yesterday=`date -d<span class="string">"yesterday"</span> +%Y-%m-%d`</div><div class="line">Full_Backup_File=<span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Today</span>"</span></div><div class="line">Inc_Backup_File=<span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Today</span>"</span></div><div class="line">Base_Backup_File=<span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Yesterday</span>"</span></div><div class="line">LogFile=<span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Today</span>"</span>.<span class="built_in">log</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" <span class="variable">$(date +"%y-%m-%d %H:%M:%S")</span> Start "</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="comment"># Database All Backup</span></div><div class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$BackupDir</span>"</span>$(date -d<span class="string">"yesterday"</span> +%Y-%m-%d) ]; <span class="keyword">then</span></div><div class="line">        <span class="variable">$Xtrabackup</span> --defaults-file=<span class="variable">$Mycnf</span> -u<span class="variable">$User</span> -p<span class="variable">$Passwd</span> -P<span class="variable">$Port</span> --slave-info --no-timestamp <span class="variable">$Full_Backup_File</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$BackupDir</span>"</span>$(date +%Y-%m-%d)_full.tar.gz ] || [ -f <span class="string">"<span class="variable">$BackupDir</span>"</span>$(date +%Y-%m-%d)_inc.tar.gz ];<span class="keyword">then</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"["</span><span class="variable">$BackupDir</span><span class="string">"<span class="variable">$(date +%Y-%m-%d)</span>_full.tar.gz] || ["</span><span class="variable">$BackupDir</span><span class="string">"<span class="variable">$(date +%Y-%m-%d)</span>_inc.tar.gz] The Backup File is exists,Can't Backup!"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="keyword">else</span></div><div class="line">        <span class="comment">#full backup</span></div><div class="line">        <span class="keyword">if</span> [ $(date +%u) == <span class="variable">$Weekly</span> ];<span class="keyword">then</span></div><div class="line">         <span class="variable">$Xtrabackup</span> --defaults-file=<span class="variable">$Mycnf</span> -u<span class="variable">$User</span> -p<span class="variable">$Passwd</span> -P<span class="variable">$Port</span> --slave-info --no-timestamp <span class="variable">$Full_Backup_File</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line"> <span class="built_in">cd</span> <span class="variable">$BackupDir</span>;</div><div class="line"> <span class="keyword">if</span> [ -d $(date +%Y-%m-%d --date=<span class="string">'1 days ago'</span>) ];<span class="keyword">then</span></div><div class="line">         rm -rf $(date +%Y-%m-%d --date=<span class="string">'1 days ago'</span>)</div><div class="line"> <span class="built_in">echo</span> <span class="string">"[rm -rf <span class="variable">$(date +%Y-%m-%d --date='1 days ago')</span>] Delete Success!"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"> eles</div><div class="line">         <span class="built_in">echo</span> <span class="string">"[rm -rf <span class="variable">$(date +%Y-%m-%d --date='1 days ago')</span>] is not exist"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"> <span class="keyword">fi</span></div><div class="line">                                 tar -zcf <span class="string">"<span class="variable">$Today</span>"</span>_full.tar.gz <span class="variable">$Today</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line"><span class="comment">#incremental backup</span></div><div class="line"><span class="keyword">elif</span> [ $(date +%u) == <span class="variable">$Next</span> ];<span class="keyword">then</span></div><div class="line">                 <span class="variable">$Xtrabackup</span> --defaults-file=<span class="variable">$Mycnf</span> -u<span class="variable">$User</span> -p<span class="variable">$Passwd</span> -P<span class="variable">$Port</span> --slave-info --no-timestamp --incremental --incremental-basedir=<span class="variable">$Base_Backup_File</span> <span class="variable">$Inc_Backup_File</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line"> <span class="built_in">cd</span> <span class="variable">$BackupDir</span>;</div><div class="line"> <span class="keyword">if</span> [ -d $(date +%Y-%m-%d --date=<span class="string">'1 days ago'</span>) ];<span class="keyword">then</span></div><div class="line">         rm -rf $(date +%Y-%m-%d --date=<span class="string">'1 days ago'</span>)</div><div class="line"> <span class="built_in">echo</span> <span class="string">"[rm -rf <span class="variable">$(date +%Y-%m-%d --date='1 days ago')</span>] Delete Success!"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"> eles</div><div class="line">         <span class="built_in">echo</span> <span class="string">"[rm -rf <span class="variable">$(date +%Y-%m-%d --date='1 days ago')</span>] is not exist"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"> <span class="keyword">fi</span></div><div class="line">                                 tar -zcf <span class="string">"<span class="variable">$Today</span>"</span>_inc.tar.gz <span class="variable">$Today</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line"><span class="keyword">else</span></div><div class="line">         <span class="variable">$Xtrabackup</span> --defaults-file=<span class="variable">$Mycnf</span> -u<span class="variable">$User</span> -p<span class="variable">$Passwd</span> -P<span class="variable">$Port</span> --slave-info --no-timestamp --incremental --incremental-basedir=<span class="variable">$Base_Backup_File</span> <span class="variable">$Inc_Backup_File</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line"> <span class="built_in">cd</span> <span class="variable">$BackupDir</span>;</div><div class="line"> <span class="keyword">if</span> [ -d $(date +%Y-%m-%d --date=<span class="string">'1 days ago'</span>) ];<span class="keyword">then</span></div><div class="line">         rm -rf $(date +%Y-%m-%d --date=<span class="string">'1 days ago'</span>)</div><div class="line"> <span class="built_in">echo</span> <span class="string">"[rm -rf <span class="variable">$(date +%Y-%m-%d --date='1 days ago')</span>] Delete Success!"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"> eles</div><div class="line">         <span class="built_in">echo</span> <span class="string">"[rm -rf <span class="variable">$(date +%Y-%m-%d --date='1 days ago')</span>] is not exist"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"> <span class="keyword">fi</span></div><div class="line">                                 tar -zcf <span class="string">"<span class="variable">$Today</span>"</span>_inc.tar.gz <span class="variable">$Today</span> &gt;&gt; /dev/null 2&gt;&amp;1</div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" <span class="variable">$(date +"%y-%m-%d %H:%M:%S")</span> End "</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="comment">#Backup retention time</span></div><div class="line">find <span class="variable">$BackupDir</span> -mtime +16 -name <span class="string">"*.*"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure><h2 id="mysqldump-备份脚本"><a href="#mysqldump-备份脚本" class="headerlink" title="mysqldump 备份脚本"></a>mysqldump 备份脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#----------------------------------</span></div><div class="line"><span class="comment">#User -------------MySQL备份用户</span></div><div class="line"><span class="comment">#Passwd -----------MySQL备份密码</span></div><div class="line"><span class="comment">#Passwd -----------MySQL备份主机</span></div><div class="line"><span class="comment">#Port -------------MySQL备份</span></div><div class="line"><span class="comment">#BackupDir --------备份存放目录</span></div><div class="line"><span class="comment"># ---------------------------------</span></div><div class="line"></div><div class="line">User=</div><div class="line">Passwd=</div><div class="line">Host=</div><div class="line">Port=3306</div><div class="line">BackupDir=</div><div class="line"></div><div class="line">Today=`date +%Y-%m-%d`</div><div class="line">MysqlDump=/usr/<span class="built_in">local</span>/mysql/bin/mysqldump</div><div class="line">LogFile=<span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Host</span>"</span>_<span class="string">"<span class="variable">$Today</span>"</span>.<span class="built_in">log</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" <span class="variable">$(date +"%Y-%m-%d %H:%M:%S")</span> Start "</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Host</span>"</span>_<span class="string">"<span class="variable">$Today</span>"</span>.tar.gz]; <span class="keyword">then</span></div><div class="line"> rm -rf <span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Host</span>"</span>_<span class="string">"<span class="variable">$Today</span>"</span>.tar.gz</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">Databases=`mysql -e <span class="string">"show databases;"</span> -u<span class="variable">$User</span> -p<span class="variable">$Passwd</span> -h<span class="variable">$Host</span> -P<span class="variable">$Port</span> | grep -Ev <span class="string">"Database|information_schema|performance_schema|test|sys"</span>`</div><div class="line"></div><div class="line"><span class="variable">$MysqlDump</span> -h<span class="string">"<span class="variable">$Host</span>"</span> -u<span class="variable">$User</span> -p<span class="variable">$Passwd</span> -P<span class="variable">$Port</span> --single-transaction --master-data=2 --flush-logs --triggers -E -R -B <span class="string">"<span class="variable">$Databases</span>"</span> |gzip&gt; <span class="string">"<span class="variable">$BackupDir</span>"</span>/<span class="string">"<span class="variable">$Host</span>"</span>_<span class="string">"<span class="variable">$Today</span>"</span>.tar.gz</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" <span class="variable">$(date +"%Y-%m-%d %H:%M:%S")</span> End "</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"---------------------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="comment">#Backup retention time</span></div><div class="line">find <span class="variable">$BackupDir</span> -mtime +7 -name <span class="string">""</span><span class="variable">$Host</span><span class="string">"*"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Xtrabackup-备份脚本&quot;&gt;&lt;a href=&quot;#Xtrabackup-备份脚本&quot; class=&quot;headerlink&quot; title=&quot;Xtrabackup 备份脚本&quot;&gt;&lt;/a&gt;Xtrabackup 备份脚本&lt;/h2&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="MySQL 备份" scheme="http://yoursite.com/tags/MySQL-%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL SQL 技巧——通过存储过程对一个表生成大量测试数据</title>
    <link href="http://yoursite.com/2018/04/02/SQL/DB_SQL/"/>
    <id>http://yoursite.com/2018/04/02/SQL/DB_SQL/</id>
    <published>2018-04-02T15:55:23.109Z</published>
    <updated>2018-04-11T15:13:41.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="建立字符串随机生成存储过程"><a href="#建立字符串随机生成存储过程" class="headerlink" title="建立字符串随机生成存储过程"></a>建立字符串随机生成存储过程</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">DELIMITER // </div><div class="line">DROP FUNCTION IF EXISTS `rand_string` //</div><div class="line">SET NAMES utf8 //</div><div class="line">CREATE FUNCTION `rand_string` (n INT) RETURNS VARCHAR(255) CHARSET <span class="string">'utf8'</span></div><div class="line">BEGIN </div><div class="line">    DECLARE char_str varchar(100) DEFAULT <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</div><div class="line">    DECLARE return_str varchar(255) DEFAULT <span class="string">''</span>;</div><div class="line">    DECLARE i INT DEFAULT 0;</div><div class="line">    WHILE i &lt; n DO</div><div class="line">        SET return_str = concat(return_str, substring(char_str, FLOOR(1 + RAND()*62), 1));</div><div class="line">        SET i = i+1;</div><div class="line">    END WHILE;</div><div class="line">    RETURN return_str;</div><div class="line">END //</div></pre></td></tr></table></figure><h1 id="建立需要生成数据的测试表结构"><a href="#建立需要生成数据的测试表结构" class="headerlink" title="建立需要生成数据的测试表结构"></a>建立需要生成数据的测试表结构</h1><p>建议生成数据后在建立所需的索引结构，否则影响插入效率，这里的测试表结构如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE `user` (  </div><div class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,  </div><div class="line">  `user_id` varchar(32) NOT NULL, </div><div class="line">  `his_user_id` varchar(32) NOT NULL DEFAULT <span class="string">''</span>, </div><div class="line">  `vote_num` int(10) unsigned NOT NULL DEFAULT 0,</div><div class="line">  `status` tinyint(4) unsigned NOT NULL DEFAULT 0,</div><div class="line">  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</div><div class="line">  PRIMARY KEY (`id`)  </div><div class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</div></pre></td></tr></table></figure></p><h1 id="建立批量插入数据的函数"><a href="#建立批量插入数据的函数" class="headerlink" title="建立批量插入数据的函数"></a>建立批量插入数据的函数</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line">DROP PROCEDURE IF EXISTS `p_bulk_insert` //</div><div class="line">CREATE PROCEDURE `p_bulk_insert`(IN n INT)</div><div class="line">BEGIN</div><div class="line">    DECLARE i INT DEFAULT 1;</div><div class="line">    DECLARE vote_num INT DEFAULT 0;</div><div class="line">    DECLARE status TINYINT DEFAULT 0;</div><div class="line">    DECLARE time_num_1 TINYINT DEFAULT 0;</div><div class="line">    DECLARE time_num_2 TINYINT DEFAULT 0;</div><div class="line">    WHILE i &lt; n DO</div><div class="line">        SET vote_num = FLOOR(1 + RAND() * 1000);</div><div class="line">        SET status = FLOOR(0 + RAND() * 2);</div><div class="line">        SET time_num_1 = FLOOR(0 + RAND() * 2);</div><div class="line">        SET time_num_2 = FLOOR(1 + RAND() * 7);</div><div class="line">        INSERT INTO `user` VALUES (NULL, rand_string(24), rand_string(24), vote_num, status, CONCAT(<span class="string">'2017-0'</span>, time_num_2, <span class="string">'-'</span>, time_num_1, time_num_2,<span class="string">' '</span>, time_num_1, time_num_2,<span class="string">':00:01'</span>));</div><div class="line">        SET i = i + 1;</div><div class="line">    END WHILE;</div><div class="line">END //</div></pre></td></tr></table></figure><h1 id="调用存储过程生成数据"><a href="#调用存储过程生成数据" class="headerlink" title="调用存储过程生成数据"></a>调用存储过程生成数据</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CALL p_bulk_insert(100);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;建立字符串随机生成存储过程&quot;&gt;&lt;a href=&quot;#建立字符串随机生成存储过程&quot; class=&quot;headerlink&quot; title=&quot;建立字符串随机生成存储过程&quot;&gt;&lt;/a&gt;建立字符串随机生成存储过程&lt;/h1&gt;&lt;figure class=&quot;highlight bash
      
    
    </summary>
    
      <category term="SQL" scheme="http://yoursite.com/categories/SQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>全面解析 MySQL、MongoDB 数据库监控工具 PMM</title>
    <link href="http://yoursite.com/2017/11/12/MySQL/MySQL_PMM/"/>
    <id>http://yoursite.com/2017/11/12/MySQL/MySQL_PMM/</id>
    <published>2017-11-11T19:19:32.344Z</published>
    <updated>2018-04-11T03:04:01.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PMM-架构组成及实现原理"><a href="#PMM-架构组成及实现原理" class="headerlink" title="PMM 架构组成及实现原理"></a>PMM 架构组成及实现原理</h2><p><img src="/images/MySQL/PMM_Architecture.png" alt="PMM 体系架构"></p><h2 id="PMM-Server-端安装过程及注意事项"><a href="#PMM-Server-端安装过程及注意事项" class="headerlink" title="PMM Server 端安装过程及注意事项"></a>PMM Server 端安装过程及注意事项</h2><h3 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><p>在低版本Docker中，安装PMM，SQL慢日志页面可能加载不出来，固推荐以 安装较高版本Docker。安装Docker后，默认Docker镜像路径在/usr/lib/docker目录，为防止根目录在使用过程中被撑爆，需修改默认路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># rpm -qa|grep docker | xargs rpm -e --nodeps</span></div><div class="line">[root@PMM ~]<span class="comment"># curl -sSL https://get.docker.com/ | sh</span></div></pre></td></tr></table></figure></p><p>设置云镜像库加速与修改默认存储路径，并启动Docker<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># mkdir -p /data/docker</span></div><div class="line">[root@PMM ~]<span class="comment"># mkdir -p /etc/docker/</span></div><div class="line"></div><div class="line">[root@PMM ~]<span class="comment"># cat &gt;&gt; /etc/docker/daemon.json &lt;&lt;EOF                        </span></div><div class="line">&#123;<span class="string">"registry-mirrors"</span>: [<span class="string">"http://396e823a.m.daocloud.io"</span>], <span class="string">"graph"</span>: <span class="string">"/data/docker"</span>&#125;</div><div class="line">EOF</div><div class="line"></div><div class="line">[root@PMM ~]<span class="comment"># systemctl start docker</span></div></pre></td></tr></table></figure></p><h3 id="拉取-PMM-镜像安装Server端"><a href="#拉取-PMM-镜像安装Server端" class="headerlink" title="拉取 PMM 镜像安装Server端"></a>拉取 PMM 镜像安装Server端</h3><h4 id="拉取PMM最新容器镜像"><a href="#拉取PMM最新容器镜像" class="headerlink" title="拉取PMM最新容器镜像"></a>拉取PMM最新容器镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># docker pull percona/pmm-server:latest</span></div></pre></td></tr></table></figure><h4 id="建立数据PMM-Server卷容器"><a href="#建立数据PMM-Server卷容器" class="headerlink" title="建立数据PMM-Server卷容器"></a>建立数据PMM-Server卷容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># docker create \</span></div><div class="line">   -v /opt/prometheus/data \</div><div class="line">   -v /opt/consul-data \</div><div class="line">   -v /var/lib/mysql \</div><div class="line">   -v /var/lib/grafana \</div><div class="line">   --name pmm-data \</div><div class="line">   percona/pmm-server:latest /bin/<span class="literal">true</span></div></pre></td></tr></table></figure><h4 id="运行PMM-Server（同时设置登录用户名-SERVER-USER-和密码-SERVER-PASSWORD-根据需要进行修改-如果80端口被占用或者修改为自己想使用的端口，以如下方式启动PMM-镜像"><a href="#运行PMM-Server（同时设置登录用户名-SERVER-USER-和密码-SERVER-PASSWORD-根据需要进行修改-如果80端口被占用或者修改为自己想使用的端口，以如下方式启动PMM-镜像" class="headerlink" title="运行PMM Server（同时设置登录用户名(SERVER_USER)和密码(SERVER_PASSWORD), 根据需要进行修改.如果80端口被占用或者修改为自己想使用的端口，以如下方式启动PMM 镜像"></a>运行PMM Server（同时设置登录用户名(SERVER_USER)和密码(SERVER_PASSWORD), 根据需要进行修改.如果80端口被占用或者修改为自己想使用的端口，以如下方式启动PMM 镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># docker run -d -p 8082:80 \</span></div><div class="line">  --volumes-from pmm-data \</div><div class="line">  --name pmm-server \</div><div class="line">  -e SERVER_USER=pmm \</div><div class="line">  -e SERVER_PASSWORD=pmmpasswd \</div><div class="line">  -e ORCHESTRATOR_ENABLED=<span class="literal">true</span> \</div><div class="line">  --restart always \</div><div class="line">  percona/pmm-server:latest</div></pre></td></tr></table></figure><h4 id="更改面板数据sqlite3库存储类型为MYSQL-容器自带"><a href="#更改面板数据sqlite3库存储类型为MYSQL-容器自带" class="headerlink" title="更改面板数据sqlite3库存储类型为MYSQL(容器自带)"></a>更改面板数据sqlite3库存储类型为MYSQL(容器自带)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@PMM ~]<span class="comment"># docker exec -i -t pmm-server /bin/bash</span></div><div class="line"></div><div class="line">sed -i <span class="string">'s/;type = sqlite3/type=mysql/g'</span> /etc/grafana/grafana.ini</div><div class="line">sed -i <span class="string">'s/;host = 127.0.0.1:3306/host = 127.0.0.1:3306/g'</span> /etc/grafana/grafana.ini</div><div class="line">sed -i <span class="string">'s/;name = grafana/name = grafana/g'</span> /etc/grafana/grafana.ini</div><div class="line">sed -i <span class="string">'s/;user = root/user = root/g'</span> /etc/grafana/grafana.ini</div><div class="line">sed -i <span class="string">'s/;password =/password =/g'</span> /etc/grafana/grafana.ini</div><div class="line"></div><div class="line">mysql -e <span class="string">"create database grafana;"</span></div></pre></td></tr></table></figure><p>退出Docker容器，重启PMM Server<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker restart pmm-server</div></pre></td></tr></table></figure></p><h2 id="PMM-Client-端搭建过程及监控注意事项"><a href="#PMM-Client-端搭建过程及监控注意事项" class="headerlink" title="PMM Client 端搭建过程及监控注意事项"></a>PMM Client 端搭建过程及监控注意事项</h2><p>到官网下载安装最新版本PMM Client客户端以及pt-toolkit，并开通各PMM Client到PMM Serevr 42000和42002端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install -y https://www.percona.com/downloads/pmm/1.8.1/binary/redhat/7/x86_64/pmm-client-1.8.1-1.x86_64.rpm</div><div class="line">yum install -y https://www.percona.com/downloads/percona-toolkit/3.0.8/binary/redhat/7/x86_64/percona-toolkit-3.0.8-1.el7.x86_64.rpm</div></pre></td></tr></table></figure></p><p>被监控的MySQL创建相关权限监控账号<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'pmm_monitor'</span>@<span class="string">'192.168.1.3'</span> IDENTIFIED BY <span class="string">'pmmpawd'</span>;</div><div class="line">FLUSH PRIVILEGES;</div></pre></td></tr></table></figure></p><p>配置服务端连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pmm-admin config --server 192.168.1.2:8082 --server-user pmm --server-password pmmpasswd --client-address 192.168.1.3 --client-name master_192.168.1.3</div></pre></td></tr></table></figure></p><p>采集MySQL监控数据<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pmm-admin add mysql --query-source perfschema --user pmm_monitor --password pmmpawd --host 192.168.1.3--port 3306</div></pre></td></tr></table></figure></p><p>检查PMM连接、监控（如果不能获取数据需要打开端口42002、42000）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pmm-admin add mysql --query-source perfschema --user pmm_monitor --password pmmpasswd --host 192.168.1.3--port 3306</div></pre></td></tr></table></figure></p><h2 id="PMM-Client-端搭建过程及监控注意事项-1"><a href="#PMM-Client-端搭建过程及监控注意事项-1" class="headerlink" title="PMM Client 端搭建过程及监控注意事项"></a>PMM Client 端搭建过程及监控注意事项</h2><p>到官网下载安装最新版本PMM Client客户端，并开通各PMM Client到PMM Serevr 42000和42002端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y https://www.percona.com/downloads/pmm/1.4.1/binary/redhat/7/x86_64/pmm-client-1.4.1-1.x86_64.rpm</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PMM-架构组成及实现原理&quot;&gt;&lt;a href=&quot;#PMM-架构组成及实现原理&quot; class=&quot;headerlink&quot; title=&quot;PMM 架构组成及实现原理&quot;&gt;&lt;/a&gt;PMM 架构组成及实现原理&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/MySQL/PM
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MongoDB" scheme="http://yoursite.com/tags/MongoDB/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="Percona" scheme="http://yoursite.com/tags/Percona/"/>
    
      <category term="数据库监控" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL SQL优化技巧——对隐式转换、not in子查询诊断和改写</title>
    <link href="http://yoursite.com/2017/11/11/SQL/MySQL_SQL/"/>
    <id>http://yoursite.com/2017/11/11/SQL/MySQL_SQL/</id>
    <published>2017-11-11T14:30:31.518Z</published>
    <updated>2018-04-11T14:20:19.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-执行计划"><a href="#MySQL-执行计划" class="headerlink" title="MySQL 执行计划"></a>MySQL 执行计划</h2><p>问题 SQL 文本如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">SELECT COUNT(*) AS count</div><div class="line">  FROM user u</div><div class="line"> INNER JOIN token t</div><div class="line">    ON u.user_id = t.user_id</div><div class="line"> INNER JOIN user_history h</div><div class="line">    ON u.user_id = h.user_id</div><div class="line"> INNER JOIN loan_record r</div><div class="line">    ON r.history_id = h.user_id</div><div class="line"> INNER JOIN ACT_HI_PROCINST AHP</div><div class="line">    on AHP.BUSINESS_KEY_ = r.loan_record_id</div><div class="line"> WHERE r.approval_result != 0</div><div class="line">   AND u.id NOT IN (SELECT n3.id</div><div class="line">                      FROM loan_record n1</div><div class="line">                     INNER JOIN user_history n2</div><div class="line">                        on n1.history_id = n2.user_id</div><div class="line">                     INNER JOIN user n3</div><div class="line">                        ON n3.user_id = n2.user_id</div><div class="line">                     WHERE n1.approval_result = 1)</div><div class="line">   AND r.apply_time LIKE CONCAT(<span class="string">'2017-11-07'</span>, <span class="string">'%'</span>)</div><div class="line">   AND t.channel IN (2，3);</div></pre></td></tr></table></figure></p><p>执行计划如下：<br><img src="/images/SQL/MySQL_SQL_7.png" alt="MySQL 执行计划"></p><p>执行时间2.1s，结果集0条。</p><h2 id="SQL性能定位及分析"><a href="#SQL性能定位及分析" class="headerlink" title="SQL性能定位及分析"></a>SQL性能定位及分析</h2><p>对于此执行计划相信很多SQL开发人员和部分DBA会说，r 表已经创建了 apply_time 字段索引，其他表都是通过索引来检索数据的，已经无法从很难从SQL及索引层面着手优化，然而这都只是表象。SQL 虽然用到了索引，然而并没有将索引用到最优，表之间连接也并不优，下面我将对此SQL的优化展开详细的讨论：</p><p>1、我们都知道 r.approval_result != 0 是无法使用索引的，当然就算改写后，也不一定会用到索引，这和数据量、过滤条件有着很深的关系。有时候对于DBA来说，可能会使用索引，并不一定使用索引，但有时候通过复合索引的方式，通过复合索引可以少扫描大量数据，对SQL改写优化有着奇效。这里根据业务规则，改写成 r.approval_result in (1,2,3)（思考下为什么我不改写为 r.approval_result &gt; 0），果然执行计划没有变化</p><p>2、not in 对于子查询来说是最差的选择，是无法走任何索引的，不要仅仅只看执行计划，在此执行计划中n3表走idx_user_id索引，但表也不是通过表关联嵌套驱动，对其改写为not exists或者left join连接查询</p><p>3、对于 r 表来说按时间 apply_time LIKE CONCAT(‘2017-11-06’, ‘%’) 字段过滤，apply_time 字段建有索引，本应该相当高效的，然而 SQL 并没有走时间字段索引，而是通过全表扫描来检索数据，此时对索引字段也没有进行函数、计算运算，猜测其中可能发生了时间与字符串类型的隐式转换，导致SQL不能通过索引扫描数据。</p><p>4、字符集的隐式转换，具体分析请根据下例分析</p><p>此时MySQL 优化器对其SQL的改写为如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">/* select<span class="comment">#1 */</span></div><div class="line">select count(0) AS <span class="string">"count"</span></div><div class="line">  from <span class="string">"test"</span>.<span class="string">"user"</span> <span class="string">"u"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"token"</span> <span class="string">"t"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"user_history"</span> <span class="string">"h"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"loan_record"</span> <span class="string">"r"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"ACT_HI_PROCINST"</span> <span class="string">"AHP"</span></div><div class="line"> <span class="built_in">where</span> ((<span class="string">"test"</span>.<span class="string">"h"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"r"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"u"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"r"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"t"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"r"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"r"</span>.<span class="string">"approval_result"</span> &lt;&gt; 0) and</div><div class="line">       (not</div><div class="line">        (&lt; in_optimizer &gt;</div><div class="line">         (<span class="string">"test"</span>.<span class="string">"u"</span>.<span class="string">"user_id"</span>, &lt; exists &gt;</div><div class="line">         ( /* select<span class="comment">#2 */</span></div><div class="line">             select 1</div><div class="line">               from <span class="string">"test"</span>.<span class="string">"loan_record"</span> <span class="string">"n1"</span></div><div class="line">               join <span class="string">"test"</span>.<span class="string">"user_history"</span> <span class="string">"n2"</span></div><div class="line">               join <span class="string">"test"</span>.<span class="string">"user"</span> <span class="string">"n3"</span></div><div class="line">              <span class="built_in">where</span> ((<span class="string">"test"</span>.<span class="string">"n3"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"n2"</span>.<span class="string">"user_id"</span>) and</div><div class="line">                    (<span class="string">"test"</span>.<span class="string">"n1"</span>.<span class="string">"history_id"</span> = <span class="string">"test"</span>.<span class="string">"n2"</span>.<span class="string">"user_id"</span>) and</div><div class="line">                    (<span class="string">"test"</span>.<span class="string">"n1"</span>.<span class="string">"approval_result"</span> = 1) and</div><div class="line">                    (&lt; cache &gt; (<span class="string">"test"</span>.<span class="string">"u"</span>.<span class="string">"user_id"</span>) = <span class="string">"test"</span>.<span class="string">"n2"</span>.<span class="string">"user_id"</span>)))))) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"r"</span>.<span class="string">"apply_time"</span> like &lt; cache &gt; (concat(<span class="string">'2017-11-07'</span>, <span class="string">'%'</span>))) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"t"</span>.<span class="string">"channel"</span> <span class="keyword">in</span> (2, 3)) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"AHP"</span>.<span class="string">"BUSINESS_KEY_"</span> =</div><div class="line">       convert(<span class="string">"test"</span>.<span class="string">"r"</span>.<span class="string">"loan_record_id"</span> using utf8mb4)))</div></pre></td></tr></table></figure></p><p>从这里可以看出MySQL 优化器将 not in 子查询自动优化为了not exists 子查询，对 not in做了优化，而时间字段无法确认是否做了隐式转换，这个需实验验证，还可以看出 AHP 表 BUSINESS<em>KEY</em> 与 r 表 loan_record_id 字段之间存在不同字符集的隐式转换。</p><p>对此我最终 SQL 改写，并为 r 表添加了approval_result，apply_time复合索引，将AHP表的 BUSINESS<em>KEY</em> 字段字符集改为utf8，最终SQL执行执行时间优化为0.26s返回数据。</p><p>最终 SQL 文本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">SELECT COUNT(*) AS count</div><div class="line">  FROM user u</div><div class="line"> INNER JOIN token t</div><div class="line">    ON u.user_id = t.user_id</div><div class="line"> INNER JOIN user_history h</div><div class="line">    ON u.user_id = h.user_id</div><div class="line"> INNER JOIN (SELECT history_id, loan_record_id</div><div class="line">               FROM loan_record</div><div class="line">              WHERE approval_result IN (1,2,3)</div><div class="line">                AND apply_time </div><div class="line">               BETWEEN <span class="string">'2017-11-07 00:00:00'</span> AND <span class="string">'2017-11-07 23:59:59'</span>) r</div><div class="line">    ON r.history_id = h.user_id</div><div class="line">   AND t.channel IN (2, 3)</div><div class="line"> INNER JOIN ACT_HI_PROCINST AHP</div><div class="line">    on AHP.BUSINESS_KEY_ = r.loan_record_id</div><div class="line">  LEFT JOIN (SELECT n3.user_id</div><div class="line">               FROM loan_record n1</div><div class="line">              INNER JOIN user_history n2</div><div class="line">                 on n1.history_id = n2.user_id</div><div class="line">              INNER JOIN user n3</div><div class="line">                 ON n3.user_id = n2.user_id</div><div class="line">              WHERE n1.approval_result = 1) a</div><div class="line">    ON u.user_id = a.user_id</div><div class="line">     WHERE a.user_id IS NULL;</div></pre></td></tr></table></figure></p><p>最终执行计划为：<br><img src="/images/SQL/MySQL_SQL_8.png" alt="MySQL 优化后执行计划"></p><p>MySQL 优化器对起的改写 SQL 优化解析为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">/* select<span class="comment">#1 */</span></div><div class="line">select count(0) AS <span class="string">"count"</span></div><div class="line">  from <span class="string">"test"</span>.<span class="string">"user"</span> <span class="string">"u"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"token"</span> <span class="string">"t"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"user_history"</span> <span class="string">"h"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"loan_record"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"ACT_HI_PROCINST"</span> <span class="string">"AHP"</span></div><div class="line">  left join(<span class="string">"test"</span>.<span class="string">"loan_record"</span> <span class="string">"n1"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"user_history"</span> <span class="string">"n2"</span></div><div class="line">  join <span class="string">"test"</span>.<span class="string">"user"</span> <span class="string">"n3"</span>)</div><div class="line">    on (((<span class="string">"test"</span>.<span class="string">"n1"</span>.<span class="string">"approval_result"</span> = 1) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"n2"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"n3"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"n1"</span>.<span class="string">"history_id"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"history_id"</span>)))</div><div class="line"> <span class="built_in">where</span> ((<span class="string">"test"</span>.<span class="string">"h"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"u"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"t"</span>.<span class="string">"user_id"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"history_id"</span>) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"AHP"</span>.<span class="string">"BUSINESS_KEY_"</span> = <span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"loan_record_id"</span>) and</div><div class="line">       isnull(<span class="string">"test"</span>.<span class="string">"n3"</span>.<span class="string">"user_id"</span>) and (<span class="string">"test"</span>.<span class="string">"t"</span>.<span class="string">"channel"</span> <span class="keyword">in</span> (2, 3)) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"approval_result"</span> <span class="keyword">in</span> (1, 2, 3)) and</div><div class="line">       (<span class="string">"test"</span>.<span class="string">"loan_record"</span>.<span class="string">"apply_time"</span> between <span class="string">'2017-11-07 00:00:00'</span> and <span class="string">'2017-11-07 23:59:59'</span>))</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-执行计划&quot;&gt;&lt;a href=&quot;#MySQL-执行计划&quot; class=&quot;headerlink&quot; title=&quot;MySQL 执行计划&quot;&gt;&lt;/a&gt;MySQL 执行计划&lt;/h2&gt;&lt;p&gt;问题 SQL 文本如下：&lt;br&gt;&lt;figure class=&quot;highlig
      
    
    </summary>
    
      <category term="SQL" scheme="http://yoursite.com/categories/SQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="SQL 优化" scheme="http://yoursite.com/tags/SQL-%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Percona Xtrabackup 物理备份详解</title>
    <link href="http://yoursite.com/2017/11/11/MySQL/MySQL_PXB/"/>
    <id>http://yoursite.com/2017/11/11/MySQL/MySQL_PXB/</id>
    <published>2017-11-11T14:22:30.123Z</published>
    <updated>2017-11-11T14:29:42.382Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-PXB-备份恢复原理"><a href="#MySQL-PXB-备份恢复原理" class="headerlink" title="MySQL PXB 备份恢复原理"></a>MySQL PXB 备份恢复原理</h2><h2 id="MySQL-PXB-重要备份参数详解"><a href="#MySQL-PXB-重要备份参数详解" class="headerlink" title="MySQL PXB 重要备份参数详解"></a>MySQL PXB 重要备份参数详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h2 id="MySQL-PXB-全量、增量备份还原"><a href="#MySQL-PXB-全量、增量备份还原" class="headerlink" title="MySQL PXB 全量、增量备份还原"></a>MySQL PXB 全量、增量备份还原</h2><h2 id="MySQL-PXB-流备份、远程备份说明"><a href="#MySQL-PXB-流备份、远程备份说明" class="headerlink" title="MySQL PXB 流备份、远程备份说明"></a>MySQL PXB 流备份、远程备份说明</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-PXB-备份恢复原理&quot;&gt;&lt;a href=&quot;#MySQL-PXB-备份恢复原理&quot; class=&quot;headerlink&quot; title=&quot;MySQL PXB 备份恢复原理&quot;&gt;&lt;/a&gt;MySQL PXB 备份恢复原理&lt;/h2&gt;&lt;h2 id=&quot;MySQL-PXB
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="MySQL 备份" scheme="http://yoursite.com/tags/MySQL-%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 主从复制延时原理、诊断与解决方案</title>
    <link href="http://yoursite.com/2017/10/19/MySQL/MySQL_Replication_delay/"/>
    <id>http://yoursite.com/2017/10/19/MySQL/MySQL_Replication_delay/</id>
    <published>2017-10-19T13:41:26.094Z</published>
    <updated>2017-10-19T15:07:47.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-主从复制延时原理"><a href="#MySQL-主从复制延时原理" class="headerlink" title="MySQL 主从复制延时原理"></a>MySQL 主从复制延时原理</h2><p>MySQL 主从复制为单线程操作，Master后台IO线程对所有DDL和DML写binlog，binlog为顺序写，效率较高；Slave的Slave_IO_Running线程到主库取binlog日志，效率会比较高（受网络延迟影响），Slave的Slave_SQL_Running线程将主库的DDL和DML操作从Relay Log获取重做。Slave重做DML和DDL的IO操作为随机IO，效率低，还存在可能Slave上的其他查询产生lock争用，由于Slave_SQL_Running也是单线程的，所有DDL或者DML都是串行执行的，当一个DDL或者DDL存在延迟，之后产生的DDL和DML都将延时</p><h2 id="MySQL-主从复制延时诊断"><a href="#MySQL-主从复制延时诊断" class="headerlink" title="MySQL 主从复制延时诊断"></a>MySQL 主从复制延时诊断</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h2 id="MySQL-主从复制延时解决"><a href="#MySQL-主从复制延时解决" class="headerlink" title="MySQL 主从复制延时解决"></a>MySQL 主从复制延时解决</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-主从复制延时原理&quot;&gt;&lt;a href=&quot;#MySQL-主从复制延时原理&quot; class=&quot;headerlink&quot; title=&quot;MySQL 主从复制延时原理&quot;&gt;&lt;/a&gt;MySQL 主从复制延时原理&lt;/h2&gt;&lt;p&gt;MySQL 主从复制为单线程操作，Maste
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="故障诊断" scheme="http://yoursite.com/tags/%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL MHA 集群原理及搭建</title>
    <link href="http://yoursite.com/2017/10/19/MySQL/MySQL_MHA/"/>
    <id>http://yoursite.com/2017/10/19/MySQL/MySQL_MHA/</id>
    <published>2017-10-19T13:37:37.596Z</published>
    <updated>2017-10-19T13:41:13.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-索引实现"><a href="#MySQL-索引实现" class="headerlink" title="MySQL 索引实现"></a>MySQL 索引实现</h2><h3 id="B-树索引"><a href="#B-树索引" class="headerlink" title="B+ 树索引"></a>B+ 树索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-索引实现&quot;&gt;&lt;a href=&quot;#MySQL-索引实现&quot; class=&quot;headerlink&quot; title=&quot;MySQL 索引实现&quot;&gt;&lt;/a&gt;MySQL 索引实现&lt;/h2&gt;&lt;h3 id=&quot;B-树索引&quot;&gt;&lt;a href=&quot;#B-树索引&quot; class=&quot;he
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="MySQL 集群" scheme="http://yoursite.com/tags/MySQL-%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB mongod.conf 参数文件配置详解</title>
    <link href="http://yoursite.com/2017/10/15/MongoDB/MongDB_mongod.conf/"/>
    <id>http://yoursite.com/2017/10/15/MongoDB/MongDB_mongod.conf/</id>
    <published>2017-10-15T02:29:15.769Z</published>
    <updated>2017-10-15T02:35:43.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MongoDB-参数文件配置"><a href="#MongoDB-参数文件配置" class="headerlink" title="MongoDB 参数文件配置"></a>MongoDB 参数文件配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h2 id="MongoDB-核心参数选择及说明"><a href="#MongoDB-核心参数选择及说明" class="headerlink" title="MongoDB 核心参数选择及说明"></a>MongoDB 核心参数选择及说明</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MongoDB-参数文件配置&quot;&gt;&lt;a href=&quot;#MongoDB-参数文件配置&quot; class=&quot;headerlink&quot; title=&quot;MongoDB 参数文件配置&quot;&gt;&lt;/a&gt;MongoDB 参数文件配置&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="MongoDB" scheme="http://yoursite.com/categories/MongoDB/"/>
    
    
      <category term="MongoDB" scheme="http://yoursite.com/tags/MongoDB/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL my.conf参数文件配置详解</title>
    <link href="http://yoursite.com/2017/10/15/MySQL/MySQL_my.conf/"/>
    <id>http://yoursite.com/2017/10/15/MySQL/MySQL_my.conf/</id>
    <published>2017-10-15T02:18:17.846Z</published>
    <updated>2017-11-11T19:17:08.114Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-参数文件配置"><a href="#MySQL-参数文件配置" class="headerlink" title="MySQL 参数文件配置"></a>MySQL 参数文件配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line">[client]</div><div class="line">port = 3306</div><div class="line">socket =  /tmp/mysql.sock</div><div class="line">default-character-set = utf8mb4</div><div class="line"></div><div class="line">[mysqld]</div><div class="line"><span class="comment">#  ---------------- Basic ----------------</span></div><div class="line">port = 3306</div><div class="line">socket = /tmp/mysql.sock</div><div class="line">basedir = /usr/<span class="built_in">local</span>/mysql   </div><div class="line">datadir = /data/mysql/data</div><div class="line">pid-file = /data/mysql/data/mysql.pid</div><div class="line">user = mysql</div><div class="line">tmpdir = /tmp</div><div class="line">character_set_server = utf8mb4</div><div class="line">transaction_isolation = REPEATABLE-READ</div><div class="line">default-storage-engine = InnoDB</div><div class="line">default_tmp_storage_engine = InnoDB</div><div class="line">explicit_defaults_for_timestamp = 1</div><div class="line">event_scheduler = 1</div><div class="line">skip-external-locking</div><div class="line">sql_mode = <span class="string">'ONLY_FULL_GROUP_BY,NO_AUTO_VALUE_ON_ZERO,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,PIPES_AS_CONCAT,ANSI_QUOTES'</span></div><div class="line"></div><div class="line"><span class="comment">#  ---------------- Connection/Session Buffer Cache ----------------</span></div><div class="line">interactive_timeout = 1800</div><div class="line">wait_timeout = 1800</div><div class="line">lock_wait_timeout = 1800</div><div class="line">skip_name_resolve = 1</div><div class="line">max_connections = 1000</div><div class="line">max_user_connections = 1000</div><div class="line">max_connect_errors =  20000</div><div class="line">back_log = 600</div><div class="line">open_files_limit = 8192</div><div class="line">table_open_cache = 4096</div><div class="line">table_definition_cache = 4096</div><div class="line">table_open_cache_instances = 128</div><div class="line">max_allowed_packet = 16M</div><div class="line">read_buffer_size = 16M</div><div class="line">read_rnd_buffer_size = 32M</div><div class="line">sort_buffer_size = 32M</div><div class="line">tmp_table_size = 128M</div><div class="line">join_buffer_size = 64M</div><div class="line">thread_cache_size = 64</div><div class="line">thread_stack = 256K</div><div class="line"></div><div class="line"><span class="comment">#  ---------------- Logfile ----------------</span></div><div class="line"><span class="built_in">log</span>-error = /data/mysql/<span class="built_in">log</span>/error.log</div><div class="line">slow_query_log = 1</div><div class="line">slow_query_log_file = /data/mysql/<span class="built_in">log</span>/slow.log</div><div class="line">log_queries_not_using_indexes = 1</div><div class="line">log_slow_admin_statements = 1</div><div class="line">log_slow_slave_statements = 1</div><div class="line">log_throttle_queries_not_using_indexes = 10</div><div class="line">expire_logs_days = 7</div><div class="line">long_query_time = 0.5</div><div class="line">min_examined_row_limit = 100</div><div class="line">binlog-rows-query-log-events = 1</div><div class="line"><span class="built_in">log</span>-bin-trust-function-creators = 1</div><div class="line"></div><div class="line"><span class="comment">#  ---------------- Replication ----------------</span></div><div class="line">server-id = 1</div><div class="line">master_info_repository = TABLE</div><div class="line">relay_log_info_repository = TABLE</div><div class="line">log_slave_updates = 1</div><div class="line">sync_binlog = 1</div><div class="line">gtid_mode = on</div><div class="line">enforce_gtid_consistency = 1</div><div class="line">binlog_format = row</div><div class="line"><span class="built_in">log</span>-bin = /data/mysql/<span class="built_in">log</span>/mysql-bin</div><div class="line"><span class="built_in">log</span>-bin-index = /data/mysql/<span class="built_in">log</span>/mysql-bin.index</div><div class="line">max_binlog_cache_size = 2048M</div><div class="line">max_binlog_size = 1024M</div><div class="line">binlog_rows_query_log_events = 1</div><div class="line">relay_log = /data/mysql/<span class="built_in">log</span>/relay.log</div><div class="line">relay_log_recovery = 1</div><div class="line">slave_skip_errors = ddl_exist_errors</div><div class="line">slave-rows-search-algorithms = <span class="string">'INDEX_SCAN,HASH_SCAN'</span></div><div class="line"></div><div class="line"><span class="comment">#  ---------------- Semi Sync Replication ----------------</span></div><div class="line"><span class="comment">#plugin_dir=/usr/local/mysql/lib/plugin</span></div><div class="line"><span class="comment">#plugin_load = "rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"</span></div><div class="line"><span class="comment">#loose_rpl_semi_sync_master_enabled = 1</span></div><div class="line"><span class="comment">#loose_rpl_semi_sync_slave_enabled = 1</span></div><div class="line"><span class="comment">#loose_rpl_semi_sync_master_timeout = 5000</span></div><div class="line"></div><div class="line"><span class="comment">#  ---------------- MySQL Group Replication ----------------</span></div><div class="line"><span class="comment">#transaction_write_set_extraction =XXHASH64</span></div><div class="line"><span class="comment">#loose-group_replication_group_name = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"</span></div><div class="line"><span class="comment">#loose-group_replication_start_on_boot = 0</span></div><div class="line"><span class="comment">#loose-group_replication_local_address = "127.0.0.1:24901"</span></div><div class="line"><span class="comment">#loose-group_replication_group_seeds = "127.0.0.1:24901,127.0.0.1:24902,127.0.0.1:24903"</span></div><div class="line"></div><div class="line"><span class="comment">#  ---------------- InnoDB ----------------</span></div><div class="line">innodb_buffer_pool_size = 12G</div><div class="line">innodb_buffer_pool_instances = 8</div><div class="line">innodb_thread_concurrency = 8</div><div class="line">innodb_io_capacity = 4000</div><div class="line">innodb_io_capacity_max = 5000</div><div class="line">innodb_log_buffer_size = 16M</div><div class="line">innodb_sort_buffer_size = 64M</div><div class="line">innodb_page_size = 16K</div><div class="line">innodb_flush_log_at_trx_commit = 1</div><div class="line">innodb_read_io_threads = 4</div><div class="line">innodb_write_io_threads = 4</div><div class="line">innodb_purge_threads = 4</div><div class="line">innodb_file_per_table = 1</div><div class="line">innodb_max_dirty_pages_pct = 80</div><div class="line">innodb_buffer_pool_load_at_startup = 1</div><div class="line">innodb_buffer_pool_dump_at_shutdown = 1</div><div class="line">innodb_log_file_size = 2048M</div><div class="line">innodb_log_files_in_group = 3</div><div class="line">innodb_log_group_home_dir = /data/mysql/data</div><div class="line">innodb_undo_logs = 128</div><div class="line">innodb_undo_tablespaces = 3</div><div class="line">innodb_undo_directory = /data/mysql/data</div><div class="line">innodb_lock_wait_timeout = 10</div><div class="line">innodb_lru_scan_depth = 4096</div><div class="line">innodb_flush_method = O_DIRECT</div><div class="line">innodb_file_format = Barracuda</div><div class="line">innodb_file_format_max = Barracuda</div><div class="line">innodb_flush_neighbors = 0</div><div class="line">innodb_large_prefix = 1</div><div class="line">innodb_print_all_deadlocks = 1</div><div class="line">innodb_stats_persistent_sample_pages = 64</div><div class="line">innodb_autoinc_lock_mode = 2</div><div class="line"></div><div class="line">[mysqld-5.6]</div><div class="line">metadata_locks_hash_instances = 64</div><div class="line"></div><div class="line">[mysqld-5.7]</div><div class="line">loose_innodb_numa_interleave = 1</div><div class="line">innodb_buffer_pool_dump_pct = 40</div><div class="line">innodb_page_cleaners = 4</div><div class="line">innodb_undo_log_truncate = 1</div><div class="line">innodb_max_undo_log_size = 2G</div><div class="line">innodb_purge_rseg_truncate_frequency = 128</div><div class="line">slave-parallel-type = LOGICAL_CLOCK</div><div class="line">slave-parallel-workers = 16</div><div class="line">slave_preserve_commit_order = 1</div><div class="line">slave_transaction_retries = 128</div><div class="line">binlog_gtid_simple_recovery = 1</div><div class="line">transaction_write_set_extraction = MURMUR32</div><div class="line">log_timestamps = system</div><div class="line">show_compatibility_56 = 1</div><div class="line"></div><div class="line">[mysqldump]</div><div class="line">quick</div><div class="line">max_allowed_packet = 32M</div><div class="line"></div><div class="line">[mysql]</div><div class="line">no-auto-rehash</div><div class="line">prompt=<span class="string">"\\u@\\h:\\d&gt;"</span></div></pre></td></tr></table></figure><h2 id="MySQL-核心参数选择及说明"><a href="#MySQL-核心参数选择及说明" class="headerlink" title="MySQL 核心参数选择及说明"></a>MySQL 核心参数选择及说明</h2><p>对于 MySQL 的不同应用场景，MySQL 参数优化也不尽相同，下面就 MySQL 核心优化配置参数做简要说明：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-参数文件配置&quot;&gt;&lt;a href=&quot;#MySQL-参数文件配置&quot; class=&quot;headerlink&quot; title=&quot;MySQL 参数文件配置&quot;&gt;&lt;/a&gt;MySQL 参数文件配置&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 索引原理详解</title>
    <link href="http://yoursite.com/2017/10/14/MySQL/MySQL_index/"/>
    <id>http://yoursite.com/2017/10/14/MySQL/MySQL_index/</id>
    <published>2017-10-14T03:58:28.055Z</published>
    <updated>2017-10-15T01:25:31.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-索引实现"><a href="#MySQL-索引实现" class="headerlink" title="MySQL 索引实现"></a>MySQL 索引实现</h2><p>在MySQL中，索引属于存储引擎级别的概念，不同存储引擎对索引的实现方式是不同的，本文主要讨论MyISAM和InnoDB两个存储引擎(MySQL数据库MyISAM和InnoDB存储引擎的比较)的索引实现方式。MyISAM属于对堆组织表，InnoDB属于索引组织表。</p><h2 id="MySQL-索引类型"><a href="#MySQL-索引类型" class="headerlink" title="MySQL 索引类型"></a>MySQL 索引类型</h2><h3 id="Hash-索引"><a href="#Hash-索引" class="headerlink" title="Hash 索引"></a>Hash 索引</h3><p>基于哈希表实现，只有精确匹配索引所有列的查询才有效，对于每一行数据，存储引擎都会对所有的索引列的值计算一个哈希码，哈希码是一个较小的值，并且不同键值的行计算出来的哈希码不一样，哈希索引将所有的哈希码存储在索引中，同时在哈希表中保存指向每个数据行的指针。<br>Hash 索引就是采用一定的哈希算法，把键值换算成新的哈希值，检索时不需要类似B+树那样从根节点到叶子节点逐级查找，只需一次哈希算法即可立刻定位到相应的位置，速度非常快。hash相当于把key通过hash函数计算，得到key的hash值,再用这个hash值做指针，查找hash表中是否存在key，如果存在就返回 key所对应的value，选定一个好的hash函数很重要，好的hash函数可以使计算出的hash值分布均匀，降低冲突，只有冲突减小了，才会降低 hash表的查找时间Hash 索引结构的特殊性，其检索效率非常高，索引的检索可以一次定位，不像B-Tree 索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问，所以 Hash 索引的查询效率要远高于 B-Tree 索引。在MySQL中，只有HEAP/MEMORY引擎表才能显式支持哈希索引（NDB也支持，但这个不常用），而且支持非唯一的哈希索引。在数据库世界里是比较与众不同，如果多个列的哈希值相同，索引会以链表的方式存放多个记录指针到同一个哈希条目中。InnoDB引擎的自适应哈希索引（adaptive hash index）不在此列。InnoDB具有一个特别的特性被称为自适应性hash索引。InnoDB发现比较频繁访问的索引值，会为其在B-Tree索引之上建立Hash索引，这使得B-Tree索引具有一定的hash特性，这个特性是自动的，无法控制和配置,只能开启和关闭此特性。<br>虽然 hash 索引效率高，但是 hash 索引本身由于其特殊性也带来了很多限制和弊端，主要有以下这些：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a、<span class="built_in">hash</span> 索引仅仅能满足=，&lt;=&gt;，IN，IS NULL或者IS NOT NULL查询，不能使用范围查询。</div><div class="line">    由于 Hash 索引比较的是进行 Hash 运算之后的 Hash 值，所以它只能用于等值的过滤，不能用于基于范围的过滤，因为经过相应的 Hash 算法处理之后的 Hash 值的大小关系，并不能保证和Hash运算前完全一样。</div><div class="line">b、Hash 索引无法被用来避免数据的排序操作。</div><div class="line">    由于 Hash 索引中存放的是经过 Hash 计算之后的 Hash 值，而且Hash值的大小关系并不一定和 Hash 运算前的键值完全一样，所以数据库无法利用索引的数据来避免任何排序运算；</div><div class="line">c、Hash 索引不能利用部分索引键查询。</div><div class="line">    对于组合索引，Hash 索引在计算 Hash 值的时候是组合索引键合并后再一起计算 Hash 值，而不是单独计算 Hash 值，所以通过组合索引的前面一个或几个索引键进行查询的时候，Hash 索引也无法被利用。</div><div class="line">d、Hash 索引在任何时候都不能避免表扫描。</div><div class="line">    Hash 索引是将索引键通过 Hash 运算之后，将 Hash运算结果的 Hash 值和所对应的行指针信息存放于一个 Hash 表中，由于不同索引键存在相同 Hash 值，所以即使取满足某个 Hash 键值的数据的记录条数，也无法从 Hash 索引中直接完成查询，还是要通过访问表中的实际数据进行相应的比较，并得到相应的结果。</div><div class="line">e、Hash 索引遇到大量Hash值相等的情况后性能并不一定就会比B-Tree索引高。</div><div class="line">    对于选择性比较低的索引键，如果创建 Hash 索引，那么将会存在大量记录指针信息存于同一个 Hash 值相关联。这样要定位某一条记录时就会非常麻烦，会浪费多次表数据的访问，而造成整体性能低下</div></pre></td></tr></table></figure></p><h3 id="B-树索引"><a href="#B-树索引" class="headerlink" title="B+ 树索引"></a>B+ 树索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h3 id="R-树索引"><a href="#R-树索引" class="headerlink" title="R 树索引"></a>R 树索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><h3 id="Fulltext-索引"><a href="#Fulltext-索引" class="headerlink" title="Fulltext 索引"></a>Fulltext 索引</h3><p>MySQL 5.6.4版本之前只有MyISAM引擎支持fulltext全文索引，InnoDB在5.6.4版本以后就开始支持fulltext全文索引，从MySQL 5.7.6开始，MySQL内置了ngram全文检索插件，开始支持中文全文索引，并且对MyISAM和InnoDB引擎有效。</p><h2 id="InnoDB和MyISAM引擎索引实现原理"><a href="#InnoDB和MyISAM引擎索引实现原理" class="headerlink" title="InnoDB和MyISAM引擎索引实现原理"></a>InnoDB和MyISAM引擎索引实现原理</h2><h3 id="MyISAM-与-InnoDB-区别"><a href="#MyISAM-与-InnoDB-区别" class="headerlink" title="MyISAM 与 InnoDB 区别"></a>MyISAM 与 InnoDB 区别</h3><p>  MyISAM中的表是以堆表的方式进行存储，堆表没有主键，因此没有聚集索引，辅助索引叶节点不是返回主键值，而是返回行标志符（ROWID），通过ROWID再去查找相应的行。很显然，对于堆表来说，通过辅助索引访问更快(IO更少)，但是如果在OLTP应用下，表中数据经常被修改，辅助索引中的ROWID可能需要经常更新，如果更新影响到物理地址的更改，这种开销比索引组织表要大得多。因此，索引组织表还是堆表，这取决于你的应用，如果你的应用是OLAP，数据更新很少，堆表更好一些。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">InnoDB支持事务，MyisAM不支持；</div><div class="line">MyisAM顺序储存数据，索引叶子节点保存对应数据行地址，辅助索引很主键索引相差无几；InnoDB主键节点同时保存数据行，其他辅助索引保存的是主键索引的值；</div><div class="line">MyisAM键值分离，索引载入内存（key_buffer_size），数据缓存依赖操作系统；InnoDB键值一起保存，索引与数据一起载入InnoDB缓冲池；MyisAM主键（唯一）索引按升序来存数据，InnoDB则不一定</div><div class="line">MyisAM索引的基数值（Cardinality，show index 命令可以看见）是精确的，InnoDB则是估计值。这里涉及到信息统计的知识，MyisAM统计信息是保存磁盘中，在alter表或Analyze table操作更新此信息，而InnoDB则是在表第一次打开的时候估计值保存在缓存区内；</div><div class="line">MyisAM处理字符串索引时用增量保存的方式，如第一个索引是‘preform’，第二个是‘preformence’，则第二个保存是‘7，ance’，这个明显的好处是缩短索引，但是缺陷就是不支持倒序提取索引，必须顺序遍历获取索引</div></pre></td></tr></table></figure></p><h3 id="MyISAM-索引实现原理"><a href="#MyISAM-索引实现原理" class="headerlink" title="MyISAM 索引实现原理"></a>MyISAM 索引实现原理</h3><p>在MyISAM中，主索引和辅助索引（Secondary key）在结构上没有任何区别，只是主索引要求key是唯一的，而辅助索引的key可以重复。MyISAM中索引检索的算法为首先按照B+Tree搜索算法搜索索引，如果指定的Key存在，则取出其data域的值，然后以data域的值为地址，读取相应数据记录。对于非聚簇索引表来说，表数据和索引是分成两部分存储的，主键索引和二级索引存储上没有任何区别。使用的是B+树作为索引的存储结构，所有的节点都是索引，叶子节点存储的是索引+索引对应的记录的地址。对于聚簇索引表来说，表数据是和主键一起存储的，主键索引的叶结点存储行数据(包含了主键值)，二级索引的叶结点存储行的主键值。使用的是B+树作为索引的存储结构，非叶子节点都是索引关键字，但非叶子节点中的关键字中不存储对应记录的具体内容或内容地址。叶子节点上的数据是主键与具体记录(数据内容)。</p><h3 id="InnoDB-索引实现原理"><a href="#InnoDB-索引实现原理" class="headerlink" title="InnoDB 索引实现原理"></a>InnoDB 索引实现原理</h3><h4 id="聚集索引"><a href="#聚集索引" class="headerlink" title="聚集索引"></a>聚集索引</h4><p>聚集索引并不是一种单独的索引类型，而是一种数据存储方式（不是数据结构，而是存储结构），具体细节依赖于其实现方式，但InnoDB的聚集索引实际上是在同一个结构中保存了B-Tree索引和数据行。<br>当表有索引时，它的数据行实际上存放在索引的叶子页中，属于聚集表示数据行和相邻的键值紧凑地存储在一起，因为无法同时把数据行存放在两个不同的地方，所以一个表只能有一个聚集索引。因为是存储引擎负责实现索引，因此不是所有的存储引擎都支持聚集索引。下面主要介绍InnoDB，但下面讨论的原理对于任何支持聚集索引（TokuDB可以有多个聚集索引）的引擎都适用：<br>叶子页包含了行的全部数据，但是节点页只包含了索引列（或者可以说非叶子节点的节点页包含的是索引值的索引，因为这些节点页包含的值是从索引列中提取出来的）。<br>InnoDB将通过主键聚集数据，如果没有定义主键，InnoDB会选择第一个非空的唯一索引代替，如果没有非空唯一索引，InnoDB会隐式定义一个6字节的rowid主键来作为聚集索引。InnoDB只聚集在同一个页面中的记录，包含相邻键值的页面可能会相距甚远。<br>要注意：聚集主键可能对性能有帮助，但也可能导致严重的性能问题，尤其是将表的存储引擎从InnoDB转换成其他引擎的时候。<br>聚集的数据有一些重要的优点：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">A：可以把相关数据保存在一起，如：实现电子邮箱时，可以根据用户ID来聚集数据，这样只需要从磁盘读取少量的数据页就能获取某个用户全部邮件，如果没有使用聚集索引，则每封邮件都可能导致一次磁盘IO</div><div class="line">B：数据访问更快，聚集索引将索引和数据保存在同一个B-Tree中，因此从聚集索引中获取数据通常比在非聚集索引中查找要快</div><div class="line">C：使用覆盖索引扫描的查询可以直接使用页节点中的主键值</div></pre></td></tr></table></figure></p><p>聚集索引的缺点：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">A：聚集数据最大限度地提高了IO密集型应用的性能，但如果数据全部放在内存中，则访问的顺序就没有那么重要了，聚集索引也没有什么优势了</div><div class="line">B：插入速度严重依赖于插入顺序，按照主键的顺序插入是加载数据到InnoDB表中速度最快的方式，但如果不是按照主键顺序加载数据，那么在加载完成后最好使用optimize table命令重新组织一下表</div><div class="line">C：更新聚集索引列的代价很高，因为会强制InnoDB将每个被更新的行移动到新的位置</div><div class="line">D：基于聚集索引的表在插入新行，或者主键被更新导致需要移动行的时候，可能面临页分裂的问题，当行的主键值要求必须将这一行插入到某个已满的页中时，存储引擎会将该页分裂成两个页面来容纳该行，这就是一次页分裂操作，页分裂会导致表占用更多的磁盘空间</div><div class="line">E：聚集索引可能导致全表扫描变慢，尤其是行比较稀疏，或者由于页分裂导致数据存储不连续的时候</div><div class="line">F：二级索引可能比想象的更大，因为在二级索引的叶子节点包含了引用行的主键列。</div><div class="line">G：二级索引访问需要两次索引查找，而不是一次</div></pre></td></tr></table></figure></p><h2 id="InnoDB的主键选择与优化"><a href="#InnoDB的主键选择与优化" class="headerlink" title="InnoDB的主键选择与优化"></a>InnoDB的主键选择与优化</h2><p>如果我们定义了主键(PRIMARY KEY)，那么InnoDB会选择主键作为聚集索引、如果没有显式定义主键，则InnoDB会选择第一个不包含有NULL值的唯一索引作为主键索引，如果也没有这样的唯一索引，则InnoDB会选择内置6字节长的ROWID作为隐含的聚集索引(ROWID随着行记录的写入而主键递增，这个ROWID不像ORACLE的ROWID那样可引用，是隐含的)。<br>数据记录本身被存于主键索引（一颗B+Tree）的叶子节点上。这就要求同一个叶子节点内（大小为一个内存页或磁盘页）的各条数据记录按主键顺序存放，因此每当有一条新的记录插入时，MySQL会根据其主键将其插入适当的节点和位置，如果页面达到装载因子（InnoDB默认为15/16），则开辟一个新的页（节点）。如果表使用自增主键，那么每次插入新的记录，记录就会顺序添加到当前索引节点的后续位置，当一页写满，就会自动开辟一个新的页；如果使用非自增主键（如果身份证号或学号等），由于每次插入主键的值近似于随机，因此每次新纪录都要被插到现有索引页得中间某个位置，此时MySQL不得不为了将新记录插到合适位置而移动数据，甚至目标页面可能已经被回写到磁盘上而从缓存中清掉，此时又要从磁盘上读回来，这增加了很多开销，同时频繁的移动、分页操作造成了大量的碎片，得到了不够紧凑的索引结构，后续不得不通过OPTIMIZE TABLE来重建表并优化填充页面。<br>综上总结，如果InnoDB表的数据写入顺序能和B+树索引的叶子节点顺序一致的话，这时候存取效率是最高的，也就是下面这几种情况的存取效率最高：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">A、使用自增列(INT/BIGINT类型)做主键，这时候写入顺序是自增的，和B+数叶子节点分裂顺序一致；</div><div class="line">B、该表不指定自增列做主键，同时也没有可以被选为主键的唯一索引(上面的条件)，这时候InnoDB会选择内置的ROWID作为主键，写入顺序和ROWID增长顺序一致；</div><div class="line">除此以外，如果一个InnoDB表又没有显示主键，又有可以被选择为主键的唯一索引，但该唯一索引可能不是递增关系时(例如字符串、UUID、多字段联合唯一索引的情况)，该表的存取效率就会比较差。</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-索引实现&quot;&gt;&lt;a href=&quot;#MySQL-索引实现&quot; class=&quot;headerlink&quot; title=&quot;MySQL 索引实现&quot;&gt;&lt;/a&gt;MySQL 索引实现&lt;/h2&gt;&lt;p&gt;在MySQL中，索引属于存储引擎级别的概念，不同存储引擎对索引的实现方式是不
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 体系结构详解</title>
    <link href="http://yoursite.com/2017/10/13/MySQL/MySQL_%20architecture/"/>
    <id>http://yoursite.com/2017/10/13/MySQL/MySQL_ architecture/</id>
    <published>2017-10-13T02:12:35.552Z</published>
    <updated>2018-04-04T14:31:18.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-体系结构概述"><a href="#MySQL-体系结构概述" class="headerlink" title="MySQL 体系结构概述"></a>MySQL 体系结构概述</h2><p>MySQL 由数据库和数据库实例组成，是单进程多线程架构。<br>数据库实例：由数据库后台进程/线程以及一个共享内存区组成，共享内存可以被运行的后台进程/线程所共享。<br>数据库：物理操作系统文件或者其它文件的集合，在 MySQL 中，数据库文件可以是frm、myd、myi、ibd等结尾的文件，当使用ndb存储引擎时候，不是os文件，是存放于内存中的文件。</p><h2 id="MySQL-体系结构组成"><a href="#MySQL-体系结构组成" class="headerlink" title="MySQL 体系结构组成"></a>MySQL 体系结构组成</h2><p><img src="/images/MySQL/MySQL_ architecture.png" alt="MySQL 体系结构图"></p><h3 id="Connectors：外部语言与SQL交互的入口"><a href="#Connectors：外部语言与SQL交互的入口" class="headerlink" title="Connectors：外部语言与SQL交互的入口"></a>Connectors：外部语言与SQL交互的入口</h3><h3 id="Management-Serveices-amp-Utilities：系统管理和控制工具"><a href="#Management-Serveices-amp-Utilities：系统管理和控制工具" class="headerlink" title="Management Serveices &amp; Utilities：系统管理和控制工具"></a>Management Serveices &amp; Utilities：系统管理和控制工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">日常的 MySQL 管理工具。包括备份恢复、MySQL复制、集群等。</div></pre></td></tr></table></figure><h3 id="Connection-Pool：连接池"><a href="#Connection-Pool：连接池" class="headerlink" title="Connection Pool：连接池"></a>Connection Pool：连接池</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">管理缓冲用户连接、用户名、密码、权限校验,线程处理等需要缓存的需求。</div><div class="line">生成线程，验证用户是否正确，保持连接会话队列。</div></pre></td></tr></table></figure><h3 id="SQL-Interface：SQL-接口"><a href="#SQL-Interface：SQL-接口" class="headerlink" title="SQL Interface：SQL 接口"></a>SQL Interface：SQL 接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">接受处理SQL语句接口。返回查询或执行结果。</div></pre></td></tr></table></figure><h3 id="Parser：解析器"><a href="#Parser：解析器" class="headerlink" title="Parser：解析器"></a>Parser：解析器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">将 SQL 进行验证和解析以便MySQL优化器可以识别的数据结构或返回 SQL 语句的错误。</div></pre></td></tr></table></figure><h3 id="Optimizer：查询优化器"><a href="#Optimizer：查询优化器" class="headerlink" title="Optimizer：查询优化器"></a>Optimizer：查询优化器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">使用查询优化器对查询进行优化，同时会验证用户是否有权限进行查询，缓存中是否有可用的最新数据。使用的是“选取-投影- 联接”策略进行查询。</div><div class="line">选取：根据Where条件选定特定的行。</div><div class="line">投影：提取Select查询的列。</div><div class="line">连接：多表连接策略。根据Where筛选数据，然后取出列，最后组合。</div></pre></td></tr></table></figure><h3 id="Cache-和-Buffer：查询缓存"><a href="#Cache-和-Buffer：查询缓存" class="headerlink" title="Cache 和 Buffer：查询缓存"></a>Cache 和 Buffer：查询缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">高速缓冲区。(Innodb buffer pool_size)。缓存数据、索引、数据字典、自适应HASH等数据。如果查询缓存有命中的查询结果,查询语句就可以直接去查询缓存中取数据。通过 LRU算法将数据的冷端溢出,未来得及刷新到磁盘的数据页,叫脏页。</div></pre></td></tr></table></figure><h3 id="Pluggable-Storage-Engine：插件式存储引擎"><a href="#Pluggable-Storage-Engine：插件式存储引擎" class="headerlink" title="Pluggable Storage Engine：插件式存储引擎"></a>Pluggable Storage Engine：插件式存储引擎</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MySQL 是数据库环境框架，其引擎采用插件方式实现。引擎是与文件打交道的子系统,它负责将数据是以某 种数据结构放到磁盘,某种算法来提取数据等(包括MVCC、锁实现,crash recovery等)。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL-体系结构概述&quot;&gt;&lt;a href=&quot;#MySQL-体系结构概述&quot; class=&quot;headerlink&quot; title=&quot;MySQL 体系结构概述&quot;&gt;&lt;/a&gt;MySQL 体系结构概述&lt;/h2&gt;&lt;p&gt;MySQL 由数据库和数据库实例组成，是单进程多线程架构。&lt;
      
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
</feed>
